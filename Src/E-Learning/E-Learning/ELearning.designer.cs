#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace E_Learning
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="elearn")]
	public partial class ELearningDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblAnswer(tblAnswer instance);
    partial void UpdatetblAnswer(tblAnswer instance);
    partial void DeletetblAnswer(tblAnswer instance);
    partial void InserttblAssignment(tblAssignment instance);
    partial void UpdatetblAssignment(tblAssignment instance);
    partial void DeletetblAssignment(tblAssignment instance);
    partial void InserttblCategory(tblCategory instance);
    partial void UpdatetblCategory(tblCategory instance);
    partial void DeletetblCategory(tblCategory instance);
    partial void InserttblFile(tblFile instance);
    partial void UpdatetblFile(tblFile instance);
    partial void DeletetblFile(tblFile instance);
    partial void InserttblForumAnswer(tblForumAnswer instance);
    partial void UpdatetblForumAnswer(tblForumAnswer instance);
    partial void DeletetblForumAnswer(tblForumAnswer instance);
    partial void InserttblForumQuestion(tblForumQuestion instance);
    partial void UpdatetblForumQuestion(tblForumQuestion instance);
    partial void DeletetblForumQuestion(tblForumQuestion instance);
    partial void InserttblLogin(tblLogin instance);
    partial void UpdatetblLogin(tblLogin instance);
    partial void DeletetblLogin(tblLogin instance);
    partial void InserttblNote(tblNote instance);
    partial void UpdatetblNote(tblNote instance);
    partial void DeletetblNote(tblNote instance);
    partial void InserttblQuestion(tblQuestion instance);
    partial void UpdatetblQuestion(tblQuestion instance);
    partial void DeletetblQuestion(tblQuestion instance);
    partial void InserttblRole(tblRole instance);
    partial void UpdatetblRole(tblRole instance);
    partial void DeletetblRole(tblRole instance);
    partial void InserttblSubject(tblSubject instance);
    partial void UpdatetblSubject(tblSubject instance);
    partial void DeletetblSubject(tblSubject instance);
    partial void InserttblTitle(tblTitle instance);
    partial void UpdatetblTitle(tblTitle instance);
    partial void DeletetblTitle(tblTitle instance);
    partial void InserttblQuestionTitle(tblQuestionTitle instance);
    partial void UpdatetblQuestionTitle(tblQuestionTitle instance);
    partial void DeletetblQuestionTitle(tblQuestionTitle instance);
    partial void InserttblAssignDetail(tblAssignDetail instance);
    partial void UpdatetblAssignDetail(tblAssignDetail instance);
    partial void DeletetblAssignDetail(tblAssignDetail instance);
    partial void InserttblTitleCount(tblTitleCount instance);
    partial void UpdatetblTitleCount(tblTitleCount instance);
    partial void DeletetblTitleCount(tblTitleCount instance);
    partial void InserttblResult(tblResult instance);
    partial void UpdatetblResult(tblResult instance);
    partial void DeletetblResult(tblResult instance);
    partial void InserttblResultMark(tblResultMark instance);
    partial void UpdatetblResultMark(tblResultMark instance);
    partial void DeletetblResultMark(tblResultMark instance);
    #endregion
		
		public ELearningDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["elearnConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ELearningDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ELearningDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ELearningDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ELearningDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblAnswer> tblAnswers
		{
			get
			{
				return this.GetTable<tblAnswer>();
			}
		}
		
		public System.Data.Linq.Table<tblAssignment> tblAssignments
		{
			get
			{
				return this.GetTable<tblAssignment>();
			}
		}
		
		public System.Data.Linq.Table<tblCategory> tblCategories
		{
			get
			{
				return this.GetTable<tblCategory>();
			}
		}
		
		public System.Data.Linq.Table<tblFile> tblFiles
		{
			get
			{
				return this.GetTable<tblFile>();
			}
		}
		
		public System.Data.Linq.Table<tblForumAnswer> tblForumAnswers
		{
			get
			{
				return this.GetTable<tblForumAnswer>();
			}
		}
		
		public System.Data.Linq.Table<tblForumQuestion> tblForumQuestions
		{
			get
			{
				return this.GetTable<tblForumQuestion>();
			}
		}
		
		public System.Data.Linq.Table<tblLogin> tblLogins
		{
			get
			{
				return this.GetTable<tblLogin>();
			}
		}
		
		public System.Data.Linq.Table<tblNote> tblNotes
		{
			get
			{
				return this.GetTable<tblNote>();
			}
		}
		
		public System.Data.Linq.Table<tblQuestion> tblQuestions
		{
			get
			{
				return this.GetTable<tblQuestion>();
			}
		}
		
		public System.Data.Linq.Table<tblRole> tblRoles
		{
			get
			{
				return this.GetTable<tblRole>();
			}
		}
		
		public System.Data.Linq.Table<tblSubject> tblSubjects
		{
			get
			{
				return this.GetTable<tblSubject>();
			}
		}
		
		public System.Data.Linq.Table<tblTitle> tblTitles
		{
			get
			{
				return this.GetTable<tblTitle>();
			}
		}
		
		public System.Data.Linq.Table<tblQuestionTitle> tblQuestionTitles
		{
			get
			{
				return this.GetTable<tblQuestionTitle>();
			}
		}
		
		public System.Data.Linq.Table<tblAssignDetail> tblAssignDetails
		{
			get
			{
				return this.GetTable<tblAssignDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblTitleCount> tblTitleCounts
		{
			get
			{
				return this.GetTable<tblTitleCount>();
			}
		}
		
		public System.Data.Linq.Table<tblResult> tblResults
		{
			get
			{
				return this.GetTable<tblResult>();
			}
		}
		
		public System.Data.Linq.Table<tblResultMark> tblResultMarks
		{
			get
			{
				return this.GetTable<tblResultMark>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblLoginNewDeleteCommand")]
		public int sp_tblLoginNewDeleteCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="BigInt")] System.Nullable<long> original_Id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_Id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblLoginNewInsertCommand")]
		public ISingleResult<sp_tblLoginNewInsertCommandResult> sp_tblLoginNewInsertCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RollNumber", DbType="NVarChar(50)")] string rollNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(50)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Class", DbType="NVarChar(50)")] string @class, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Department", DbType="NVarChar(50)")] string department, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailID", DbType="NVarChar(50)")] string emailID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedDate", DbType="DateTime")] System.Nullable<System.DateTime> createdDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastLogin", DbType="DateTime")] System.Nullable<System.DateTime> lastLogin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_RoleId", DbType="BigInt")] System.Nullable<long> fK_RoleId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="NVarChar(150)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PostalCode", DbType="BigInt")] System.Nullable<long> postalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), rollNumber, name, password, @class, department, emailID, createdDate, lastLogin, fK_RoleId, address, postalCode);
			return ((ISingleResult<sp_tblLoginNewInsertCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblLoginNewSelectCommand")]
		public ISingleResult<sp_tblLoginNewSelectCommandResult> sp_tblLoginNewSelectCommand()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_tblLoginNewSelectCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblLoginNewUpdateCommand")]
		public ISingleResult<sp_tblLoginNewUpdateCommandResult> sp_tblLoginNewUpdateCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RollNumber", DbType="NVarChar(50)")] string rollNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(50)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Class", DbType="NVarChar(50)")] string @class, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Department", DbType="NVarChar(50)")] string department, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailID", DbType="NVarChar(50)")] string emailID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedDate", DbType="DateTime")] System.Nullable<System.DateTime> createdDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastLogin", DbType="DateTime")] System.Nullable<System.DateTime> lastLogin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_RoleId", DbType="BigInt")] System.Nullable<long> fK_RoleId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="NVarChar(150)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PostalCode", DbType="BigInt")] System.Nullable<long> postalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), rollNumber, name, password, @class, department, emailID, createdDate, lastLogin, fK_RoleId, address, postalCode, id);
			return ((ISingleResult<sp_tblLoginNewUpdateCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblSubjectsNewDeleteCommand")]
		public int sp_tblSubjectsNewDeleteCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="BigInt")] System.Nullable<long> original_Id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_Id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblSubjectsNewInsertCommand")]
		public ISingleResult<sp_tblSubjectsNewInsertCommandResult> sp_tblSubjectsNewInsertCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectName", DbType="NVarChar(500)")] string subjectName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subjectName);
			return ((ISingleResult<sp_tblSubjectsNewInsertCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblSubjectsNewSelectCommand")]
		public ISingleResult<sp_tblSubjectsNewSelectCommandResult> sp_tblSubjectsNewSelectCommand()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_tblSubjectsNewSelectCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblSubjectsNewUpdateCommand")]
		public ISingleResult<sp_tblSubjectsNewUpdateCommandResult> sp_tblSubjectsNewUpdateCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectName", DbType="NVarChar(500)")] string subjectName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subjectName, id);
			return ((ISingleResult<sp_tblSubjectsNewUpdateCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblTitlesNewDeleteCommand")]
		public int sp_tblTitlesNewDeleteCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="BigInt")] System.Nullable<long> original_Id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_Id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblTitlesNewInsertCommand")]
		public ISingleResult<sp_tblTitlesNewInsertCommandResult> sp_tblTitlesNewInsertCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TitleName", DbType="NVarChar(500)")] string titleName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_SubjectId", DbType="BigInt")] System.Nullable<long> fK_SubjectId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), titleName, fK_SubjectId);
			return ((ISingleResult<sp_tblTitlesNewInsertCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblTitlesNewSelectCommand")]
		public ISingleResult<sp_tblTitlesNewSelectCommandResult> sp_tblTitlesNewSelectCommand()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_tblTitlesNewSelectCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblTitlesNewUpdateCommand")]
		public ISingleResult<sp_tblTitlesNewUpdateCommandResult> sp_tblTitlesNewUpdateCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TitleName", DbType="NVarChar(500)")] string titleName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_SubjectId", DbType="BigInt")] System.Nullable<long> fK_SubjectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), titleName, fK_SubjectId, id);
			return ((ISingleResult<sp_tblTitlesNewUpdateCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblAssignmentsNewDeleteCommand")]
		public int sp_tblAssignmentsNewDeleteCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="BigInt")] System.Nullable<long> original_Id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_Id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblAssignmentsNewInsertCommand")]
		public ISingleResult<sp_tblAssignmentsNewInsertCommandResult> sp_tblAssignmentsNewInsertCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FilePath", DbType="NVarChar(500)")] string filePath, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_StaffId", DbType="BigInt")] System.Nullable<long> fK_StaffId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Topic", DbType="NVarChar(500)")] string topic, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignNum", DbType="Int")] System.Nullable<int> assignNum, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date", DbType="DateTime")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_StudentId", DbType="BigInt")] System.Nullable<long> fK_StudentId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Bit")] System.Nullable<bool> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), filePath, fK_StaffId, topic, assignNum, date, fK_StudentId, status);
			return ((ISingleResult<sp_tblAssignmentsNewInsertCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblAssignmentsNewSelectCommand")]
		public ISingleResult<sp_tblAssignmentsNewSelectCommandResult> sp_tblAssignmentsNewSelectCommand()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_tblAssignmentsNewSelectCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblAssignmentsNewUpdateCommand")]
		public ISingleResult<sp_tblAssignmentsNewUpdateCommandResult> sp_tblAssignmentsNewUpdateCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FilePath", DbType="NVarChar(500)")] string filePath, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_StaffId", DbType="BigInt")] System.Nullable<long> fK_StaffId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Topic", DbType="NVarChar(500)")] string topic, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignNum", DbType="Int")] System.Nullable<int> assignNum, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date", DbType="DateTime")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_StudentId", DbType="BigInt")] System.Nullable<long> fK_StudentId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Bit")] System.Nullable<bool> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="BigInt")] System.Nullable<long> original_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), filePath, fK_StaffId, topic, assignNum, date, fK_StudentId, status, original_Id, id);
			return ((ISingleResult<sp_tblAssignmentsNewUpdateCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_select")]
		public ISingleResult<sp_selectResult> sp_select([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StaffId", DbType="BigInt")] System.Nullable<long> staffId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="Bit")] System.Nullable<bool> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), staffId, status);
			return ((ISingleResult<sp_selectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblNotesNewDeleteCommand")]
		public int sp_tblNotesNewDeleteCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="BigInt")] System.Nullable<long> original_Id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_Id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblNotesNewInsertCommand")]
		public ISingleResult<sp_tblNotesNewInsertCommandResult> sp_tblNotesNewInsertCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_StaffId", DbType="BigInt")] System.Nullable<long> fK_StaffId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_FileId", DbType="BigInt")] System.Nullable<long> fK_FileId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fK_StaffId, fK_FileId);
			return ((ISingleResult<sp_tblNotesNewInsertCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblNotesNewSelectCommand")]
		public ISingleResult<sp_tblNotesNewSelectCommandResult> sp_tblNotesNewSelectCommand()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_tblNotesNewSelectCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblNotesNewUpdateCommand")]
		public ISingleResult<sp_tblNotesNewUpdateCommandResult> sp_tblNotesNewUpdateCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_StaffId", DbType="BigInt")] System.Nullable<long> fK_StaffId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_FileId", DbType="BigInt")] System.Nullable<long> fK_FileId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="BigInt")] System.Nullable<long> original_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fK_StaffId, fK_FileId, original_Id, id);
			return ((ISingleResult<sp_tblNotesNewUpdateCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblFilesNewDeleteCommand")]
		public int sp_tblFilesNewDeleteCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="BigInt")] System.Nullable<long> original_Id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_Id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblFilesNewInsertCommand")]
		public ISingleResult<sp_tblFilesNewInsertCommandResult> sp_tblFilesNewInsertCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_TitleId", DbType="BigInt")] System.Nullable<long> fK_TitleId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FilePath", DbType="NVarChar(500)")] string filePath)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fK_TitleId, filePath);
			return ((ISingleResult<sp_tblFilesNewInsertCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblFilesNewSelectCommand")]
		public ISingleResult<sp_tblFilesNewSelectCommandResult> sp_tblFilesNewSelectCommand()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_tblFilesNewSelectCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblFilesNewUpdateCommand")]
		public ISingleResult<sp_tblFilesNewUpdateCommandResult> sp_tblFilesNewUpdateCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_TitleId", DbType="BigInt")] System.Nullable<long> fK_TitleId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FilePath", DbType="NVarChar(500)")] string filePath, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="BigInt")] System.Nullable<long> original_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fK_TitleId, filePath, original_Id, id);
			return ((ISingleResult<sp_tblFilesNewUpdateCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_select_file")]
		public ISingleResult<sp_select_fileResult> sp_select_file()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_select_fileResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblAnswersNewDeleteCommand")]
		public int sp_tblAnswersNewDeleteCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="BigInt")] System.Nullable<long> original_Id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_Id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblAnswersNewInsertCommand")]
		public ISingleResult<sp_tblAnswersNewInsertCommandResult> sp_tblAnswersNewInsertCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Answer", DbType="NVarChar(50)")] string answer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_QuestionId", DbType="BigInt")] System.Nullable<long> fK_QuestionId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnswerType", DbType="Int")] System.Nullable<int> answerType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), answer, fK_QuestionId, answerType);
			return ((ISingleResult<sp_tblAnswersNewInsertCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblAnswersNewSelectCommand")]
		public ISingleResult<sp_tblAnswersNewSelectCommandResult> sp_tblAnswersNewSelectCommand()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_tblAnswersNewSelectCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblAnswersNewUpdateCommand")]
		public ISingleResult<sp_tblAnswersNewUpdateCommandResult> sp_tblAnswersNewUpdateCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Answer", DbType="NVarChar(50)")] string answer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_QuestionId", DbType="BigInt")] System.Nullable<long> fK_QuestionId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnswerType", DbType="Int")] System.Nullable<int> answerType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="BigInt")] System.Nullable<long> original_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), answer, fK_QuestionId, answerType, original_Id, id);
			return ((ISingleResult<sp_tblAnswersNewUpdateCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblQuestionNewDeleteCommand")]
		public int sp_tblQuestionNewDeleteCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_QuestionId", DbType="BigInt")] System.Nullable<long> original_QuestionId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_QuestionId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblQuestionNewInsertCommand")]
		public ISingleResult<sp_tblQuestionNewInsertCommandResult> sp_tblQuestionNewInsertCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Question", DbType="NVarChar(500)")] string question, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fk_QuestionTitle", DbType="BigInt")] System.Nullable<long> fk_QuestionTitle, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_Answer", DbType="BigInt")] System.Nullable<long> fK_Answer)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), question, fk_QuestionTitle, fK_Answer);
			return ((ISingleResult<sp_tblQuestionNewInsertCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblQuestionNewSelectCommand")]
		public ISingleResult<sp_tblQuestionNewSelectCommandResult> sp_tblQuestionNewSelectCommand()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_tblQuestionNewSelectCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblQuestionNewUpdateCommand")]
		public ISingleResult<sp_tblQuestionNewUpdateCommandResult> sp_tblQuestionNewUpdateCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Question", DbType="NVarChar(500)")] string question, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fk_QuestionTitle", DbType="BigInt")] System.Nullable<long> fk_QuestionTitle, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_Answer", DbType="BigInt")] System.Nullable<long> fK_Answer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_QuestionId", DbType="BigInt")] System.Nullable<long> original_QuestionId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionId", DbType="BigInt")] System.Nullable<long> questionId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), question, fk_QuestionTitle, fK_Answer, original_QuestionId, questionId);
			return ((ISingleResult<sp_tblQuestionNewUpdateCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblQuestionTitleNewDeleteCommand")]
		public int sp_tblQuestionTitleNewDeleteCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_QuestionTitleId", DbType="BigInt")] System.Nullable<long> original_QuestionTitleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_QuestionTitleId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblQuestionTitleNewInsertCommand")]
		public ISingleResult<sp_tblQuestionTitleNewInsertCommandResult> sp_tblQuestionTitleNewInsertCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionTitle", DbType="NVarChar(50)")] string questionTitle)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), questionTitle);
			return ((ISingleResult<sp_tblQuestionTitleNewInsertCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblQuestionTitleNewSelectCommand")]
		public ISingleResult<sp_tblQuestionTitleNewSelectCommandResult> sp_tblQuestionTitleNewSelectCommand()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_tblQuestionTitleNewSelectCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblQuestionTitleNewUpdateCommand")]
		public ISingleResult<sp_tblQuestionTitleNewUpdateCommandResult> sp_tblQuestionTitleNewUpdateCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionTitle", DbType="NVarChar(50)")] string questionTitle, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_QuestionTitleId", DbType="BigInt")] System.Nullable<long> original_QuestionTitleId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionTitleId", DbType="BigInt")] System.Nullable<long> questionTitleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), questionTitle, original_QuestionTitleId, questionTitleId);
			return ((ISingleResult<sp_tblQuestionTitleNewUpdateCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblAssignDetailNewDeleteCommand")]
		public int sp_tblAssignDetailNewDeleteCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="BigInt")] System.Nullable<long> original_Id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_Id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblAssignDetailNewInsertCommand")]
		public ISingleResult<sp_tblAssignDetailNewInsertCommandResult> sp_tblAssignDetailNewInsertCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TimeDuration", DbType="DateTime")] System.Nullable<System.DateTime> timeDuration, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TimeLeft", DbType="DateTime")] System.Nullable<System.DateTime> timeLeft)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), timeDuration, timeLeft);
			return ((ISingleResult<sp_tblAssignDetailNewInsertCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblAssignDetailNewSelectCommand")]
		public ISingleResult<sp_tblAssignDetailNewSelectCommandResult> sp_tblAssignDetailNewSelectCommand()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_tblAssignDetailNewSelectCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblAssignDetailNewUpdateCommand")]
		public ISingleResult<sp_tblAssignDetailNewUpdateCommandResult> sp_tblAssignDetailNewUpdateCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TimeDuration", DbType="DateTime")] System.Nullable<System.DateTime> timeDuration, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TimeLeft", DbType="DateTime")] System.Nullable<System.DateTime> timeLeft, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="BigInt")] System.Nullable<long> original_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), timeDuration, timeLeft, original_Id, id);
			return ((ISingleResult<sp_tblAssignDetailNewUpdateCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblTitleCountNewUpdateCommand")]
		public ISingleResult<sp_tblTitleCountNewUpdateCommandResult> sp_tblTitleCountNewUpdateCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fk_TitleId", DbType="BigInt")] System.Nullable<long> fk_TitleId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> count, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fk_AssignId", DbType="BigInt")] System.Nullable<long> fk_AssignId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="BigInt")] System.Nullable<long> original_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fk_TitleId, count, fk_AssignId, original_Id, id);
			return ((ISingleResult<sp_tblTitleCountNewUpdateCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblTitleCountNewSelectCommand")]
		public ISingleResult<sp_tblTitleCountNewSelectCommandResult> sp_tblTitleCountNewSelectCommand()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_tblTitleCountNewSelectCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblTitleCountNewInsertCommand")]
		public ISingleResult<sp_tblTitleCountNewInsertCommandResult> sp_tblTitleCountNewInsertCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fk_TitleId", DbType="BigInt")] System.Nullable<long> fk_TitleId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> count, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fk_AssignId", DbType="BigInt")] System.Nullable<long> fk_AssignId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fk_TitleId, count, fk_AssignId);
			return ((ISingleResult<sp_tblTitleCountNewInsertCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblTitleCountNewDeleteCommand")]
		public int sp_tblTitleCountNewDeleteCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_Id", DbType="BigInt")] System.Nullable<long> original_Id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_Id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblResultMarksNewDeleteCommand")]
		public int sp_tblResultMarksNewDeleteCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_MarkId", DbType="BigInt")] System.Nullable<long> original_MarkId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_MarkId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblResultMarksNewInsertCommand")]
		public ISingleResult<sp_tblResultMarksNewInsertCommandResult> sp_tblResultMarksNewInsertCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Mark", DbType="Int")] System.Nullable<int> mark, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_ResultId", DbType="BigInt")] System.Nullable<long> fK_ResultId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_CateId", DbType="BigInt")] System.Nullable<long> fK_CateId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mark, fK_ResultId, fK_CateId);
			return ((ISingleResult<sp_tblResultMarksNewInsertCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblResultMarksNewSelectCommand")]
		public ISingleResult<sp_tblResultMarksNewSelectCommandResult> sp_tblResultMarksNewSelectCommand()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_tblResultMarksNewSelectCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblResultMarksNewUpdateCommand")]
		public ISingleResult<sp_tblResultMarksNewUpdateCommandResult> sp_tblResultMarksNewUpdateCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Mark", DbType="Int")] System.Nullable<int> mark, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_ResultId", DbType="BigInt")] System.Nullable<long> fK_ResultId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_CateId", DbType="BigInt")] System.Nullable<long> fK_CateId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_MarkId", DbType="BigInt")] System.Nullable<long> original_MarkId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MarkId", DbType="BigInt")] System.Nullable<long> markId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mark, fK_ResultId, fK_CateId, original_MarkId, markId);
			return ((ISingleResult<sp_tblResultMarksNewUpdateCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblResultNewDeleteCommand")]
		public int sp_tblResultNewDeleteCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ResultId", DbType="BigInt")] System.Nullable<long> original_ResultId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), original_ResultId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblResultNewInsertCommand")]
		public ISingleResult<sp_tblResultNewInsertCommandResult> sp_tblResultNewInsertCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalMark", DbType="Int")] System.Nullable<int> totalMark, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_UserId", DbType="BigInt")] System.Nullable<long> fK_UserId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), totalMark, fK_UserId);
			return ((ISingleResult<sp_tblResultNewInsertCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblResultNewSelectCommand")]
		public ISingleResult<sp_tblResultNewSelectCommandResult> sp_tblResultNewSelectCommand()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_tblResultNewSelectCommandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_tblResultNewUpdateCommand")]
		public ISingleResult<sp_tblResultNewUpdateCommandResult> sp_tblResultNewUpdateCommand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalMark", DbType="Int")] System.Nullable<int> totalMark, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FK_UserId", DbType="BigInt")] System.Nullable<long> fK_UserId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Original_ResultId", DbType="BigInt")] System.Nullable<long> original_ResultId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResultId", DbType="BigInt")] System.Nullable<long> resultId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), totalMark, fK_UserId, original_ResultId, resultId);
			return ((ISingleResult<sp_tblResultNewUpdateCommandResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAnswers")]
	public partial class tblAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Answer;
		
		private System.Nullable<long> _FK_QuestionId;
		
		private System.Nullable<int> _AnswerType;
		
		private EntityRef<tblQuestion> _tblQuestion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    partial void OnFK_QuestionIdChanging(System.Nullable<long> value);
    partial void OnFK_QuestionIdChanged();
    partial void OnAnswerTypeChanging(System.Nullable<int> value);
    partial void OnAnswerTypeChanged();
    #endregion
		
		public tblAnswer()
		{
			this._tblQuestion = default(EntityRef<tblQuestion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NVarChar(50)")]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_QuestionId", DbType="BigInt")]
		public System.Nullable<long> FK_QuestionId
		{
			get
			{
				return this._FK_QuestionId;
			}
			set
			{
				if ((this._FK_QuestionId != value))
				{
					if (this._tblQuestion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_QuestionIdChanging(value);
					this.SendPropertyChanging();
					this._FK_QuestionId = value;
					this.SendPropertyChanged("FK_QuestionId");
					this.OnFK_QuestionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerType", DbType="Int")]
		public System.Nullable<int> AnswerType
		{
			get
			{
				return this._AnswerType;
			}
			set
			{
				if ((this._AnswerType != value))
				{
					this.OnAnswerTypeChanging(value);
					this.SendPropertyChanging();
					this._AnswerType = value;
					this.SendPropertyChanged("AnswerType");
					this.OnAnswerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQuestion_tblAnswer", Storage="_tblQuestion", ThisKey="FK_QuestionId", OtherKey="QuestionId", IsForeignKey=true)]
		public tblQuestion tblQuestion
		{
			get
			{
				return this._tblQuestion.Entity;
			}
			set
			{
				tblQuestion previousValue = this._tblQuestion.Entity;
				if (((previousValue != value) 
							|| (this._tblQuestion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblQuestion.Entity = null;
						previousValue.tblAnswers.Remove(this);
					}
					this._tblQuestion.Entity = value;
					if ((value != null))
					{
						value.tblAnswers.Add(this);
						this._FK_QuestionId = value.QuestionId;
					}
					else
					{
						this._FK_QuestionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblQuestion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAssignments")]
	public partial class tblAssignment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _FilePath;
		
		private System.Nullable<long> _FK_StaffId;
		
		private string _Topic;
		
		private System.Nullable<int> _AssignNum;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<long> _FK_StudentId;
		
		private System.Nullable<bool> _Status;
		
		private EntityRef<tblLogin> _tblLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnFK_StaffIdChanging(System.Nullable<long> value);
    partial void OnFK_StaffIdChanged();
    partial void OnTopicChanging(string value);
    partial void OnTopicChanged();
    partial void OnAssignNumChanging(System.Nullable<int> value);
    partial void OnAssignNumChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnFK_StudentIdChanging(System.Nullable<long> value);
    partial void OnFK_StudentIdChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    #endregion
		
		public tblAssignment()
		{
			this._tblLogin = default(EntityRef<tblLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(500)")]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_StaffId", DbType="BigInt")]
		public System.Nullable<long> FK_StaffId
		{
			get
			{
				return this._FK_StaffId;
			}
			set
			{
				if ((this._FK_StaffId != value))
				{
					if (this._tblLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_StaffIdChanging(value);
					this.SendPropertyChanging();
					this._FK_StaffId = value;
					this.SendPropertyChanged("FK_StaffId");
					this.OnFK_StaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Topic", DbType="NVarChar(500)")]
		public string Topic
		{
			get
			{
				return this._Topic;
			}
			set
			{
				if ((this._Topic != value))
				{
					this.OnTopicChanging(value);
					this.SendPropertyChanging();
					this._Topic = value;
					this.SendPropertyChanged("Topic");
					this.OnTopicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignNum", DbType="Int")]
		public System.Nullable<int> AssignNum
		{
			get
			{
				return this._AssignNum;
			}
			set
			{
				if ((this._AssignNum != value))
				{
					this.OnAssignNumChanging(value);
					this.SendPropertyChanging();
					this._AssignNum = value;
					this.SendPropertyChanged("AssignNum");
					this.OnAssignNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_StudentId", DbType="BigInt")]
		public System.Nullable<long> FK_StudentId
		{
			get
			{
				return this._FK_StudentId;
			}
			set
			{
				if ((this._FK_StudentId != value))
				{
					this.OnFK_StudentIdChanging(value);
					this.SendPropertyChanging();
					this._FK_StudentId = value;
					this.SendPropertyChanged("FK_StudentId");
					this.OnFK_StudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLogin_tblAssignment", Storage="_tblLogin", ThisKey="FK_StaffId", OtherKey="Id", IsForeignKey=true)]
		public tblLogin tblLogin
		{
			get
			{
				return this._tblLogin.Entity;
			}
			set
			{
				tblLogin previousValue = this._tblLogin.Entity;
				if (((previousValue != value) 
							|| (this._tblLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblLogin.Entity = null;
						previousValue.tblAssignments.Remove(this);
					}
					this._tblLogin.Entity = value;
					if ((value != null))
					{
						value.tblAssignments.Add(this);
						this._FK_StaffId = value.Id;
					}
					else
					{
						this._FK_StaffId = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCategory")]
	public partial class tblCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _CategoryName;
		
		private EntitySet<tblForumQuestion> _tblForumQuestions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    #endregion
		
		public tblCategory()
		{
			this._tblForumQuestions = new EntitySet<tblForumQuestion>(new Action<tblForumQuestion>(this.attach_tblForumQuestions), new Action<tblForumQuestion>(this.detach_tblForumQuestions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(100)")]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCategory_tblForumQuestion", Storage="_tblForumQuestions", ThisKey="Id", OtherKey="FK_CategoryId")]
		public EntitySet<tblForumQuestion> tblForumQuestions
		{
			get
			{
				return this._tblForumQuestions;
			}
			set
			{
				this._tblForumQuestions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblForumQuestions(tblForumQuestion entity)
		{
			this.SendPropertyChanging();
			entity.tblCategory = this;
		}
		
		private void detach_tblForumQuestions(tblForumQuestion entity)
		{
			this.SendPropertyChanging();
			entity.tblCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblFiles")]
	public partial class tblFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _FK_TitleId;
		
		private string _FilePath;
		
		private EntitySet<tblNote> _tblNotes;
		
		private EntityRef<tblTitle> _tblTitle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFK_TitleIdChanging(System.Nullable<long> value);
    partial void OnFK_TitleIdChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    #endregion
		
		public tblFile()
		{
			this._tblNotes = new EntitySet<tblNote>(new Action<tblNote>(this.attach_tblNotes), new Action<tblNote>(this.detach_tblNotes));
			this._tblTitle = default(EntityRef<tblTitle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_TitleId", DbType="BigInt")]
		public System.Nullable<long> FK_TitleId
		{
			get
			{
				return this._FK_TitleId;
			}
			set
			{
				if ((this._FK_TitleId != value))
				{
					if (this._tblTitle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_TitleIdChanging(value);
					this.SendPropertyChanging();
					this._FK_TitleId = value;
					this.SendPropertyChanged("FK_TitleId");
					this.OnFK_TitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(500)")]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblFile_tblNote", Storage="_tblNotes", ThisKey="Id", OtherKey="FK_FileId")]
		public EntitySet<tblNote> tblNotes
		{
			get
			{
				return this._tblNotes;
			}
			set
			{
				this._tblNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblTitle_tblFile", Storage="_tblTitle", ThisKey="FK_TitleId", OtherKey="Id", IsForeignKey=true)]
		public tblTitle tblTitle
		{
			get
			{
				return this._tblTitle.Entity;
			}
			set
			{
				tblTitle previousValue = this._tblTitle.Entity;
				if (((previousValue != value) 
							|| (this._tblTitle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblTitle.Entity = null;
						previousValue.tblFiles.Remove(this);
					}
					this._tblTitle.Entity = value;
					if ((value != null))
					{
						value.tblFiles.Add(this);
						this._FK_TitleId = value.Id;
					}
					else
					{
						this._FK_TitleId = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblTitle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblNotes(tblNote entity)
		{
			this.SendPropertyChanging();
			entity.tblFile = this;
		}
		
		private void detach_tblNotes(tblNote entity)
		{
			this.SendPropertyChanging();
			entity.tblFile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblForumAnswer")]
	public partial class tblForumAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Answer;
		
		private System.Nullable<long> _FK_QuestionId;
		
		private System.Nullable<long> _FK_UserId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntityRef<tblForumQuestion> _tblForumQuestion;
		
		private EntityRef<tblLogin> _tblLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    partial void OnFK_QuestionIdChanging(System.Nullable<long> value);
    partial void OnFK_QuestionIdChanged();
    partial void OnFK_UserIdChanging(System.Nullable<long> value);
    partial void OnFK_UserIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public tblForumAnswer()
		{
			this._tblForumQuestion = default(EntityRef<tblForumQuestion>);
			this._tblLogin = default(EntityRef<tblLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NVarChar(500)")]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_QuestionId", DbType="BigInt")]
		public System.Nullable<long> FK_QuestionId
		{
			get
			{
				return this._FK_QuestionId;
			}
			set
			{
				if ((this._FK_QuestionId != value))
				{
					if (this._tblForumQuestion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_QuestionIdChanging(value);
					this.SendPropertyChanging();
					this._FK_QuestionId = value;
					this.SendPropertyChanged("FK_QuestionId");
					this.OnFK_QuestionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_UserId", DbType="BigInt")]
		public System.Nullable<long> FK_UserId
		{
			get
			{
				return this._FK_UserId;
			}
			set
			{
				if ((this._FK_UserId != value))
				{
					if (this._tblLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_UserIdChanging(value);
					this.SendPropertyChanging();
					this._FK_UserId = value;
					this.SendPropertyChanged("FK_UserId");
					this.OnFK_UserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblForumQuestion_tblForumAnswer", Storage="_tblForumQuestion", ThisKey="FK_QuestionId", OtherKey="Id", IsForeignKey=true)]
		public tblForumQuestion tblForumQuestion
		{
			get
			{
				return this._tblForumQuestion.Entity;
			}
			set
			{
				tblForumQuestion previousValue = this._tblForumQuestion.Entity;
				if (((previousValue != value) 
							|| (this._tblForumQuestion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblForumQuestion.Entity = null;
						previousValue.tblForumAnswers.Remove(this);
					}
					this._tblForumQuestion.Entity = value;
					if ((value != null))
					{
						value.tblForumAnswers.Add(this);
						this._FK_QuestionId = value.Id;
					}
					else
					{
						this._FK_QuestionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblForumQuestion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLogin_tblForumAnswer", Storage="_tblLogin", ThisKey="FK_UserId", OtherKey="Id", IsForeignKey=true)]
		public tblLogin tblLogin
		{
			get
			{
				return this._tblLogin.Entity;
			}
			set
			{
				tblLogin previousValue = this._tblLogin.Entity;
				if (((previousValue != value) 
							|| (this._tblLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblLogin.Entity = null;
						previousValue.tblForumAnswers.Remove(this);
					}
					this._tblLogin.Entity = value;
					if ((value != null))
					{
						value.tblForumAnswers.Add(this);
						this._FK_UserId = value.Id;
					}
					else
					{
						this._FK_UserId = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblForumQuestion")]
	public partial class tblForumQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Question;
		
		private System.Nullable<long> _FK_CategoryId;
		
		private System.Nullable<long> _FK_UserId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntitySet<tblForumAnswer> _tblForumAnswers;
		
		private EntityRef<tblCategory> _tblCategory;
		
		private EntityRef<tblLogin> _tblLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnFK_CategoryIdChanging(System.Nullable<long> value);
    partial void OnFK_CategoryIdChanged();
    partial void OnFK_UserIdChanging(System.Nullable<long> value);
    partial void OnFK_UserIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public tblForumQuestion()
		{
			this._tblForumAnswers = new EntitySet<tblForumAnswer>(new Action<tblForumAnswer>(this.attach_tblForumAnswers), new Action<tblForumAnswer>(this.detach_tblForumAnswers));
			this._tblCategory = default(EntityRef<tblCategory>);
			this._tblLogin = default(EntityRef<tblLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="NVarChar(500)")]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this.OnQuestionChanging(value);
					this.SendPropertyChanging();
					this._Question = value;
					this.SendPropertyChanged("Question");
					this.OnQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_CategoryId", DbType="BigInt")]
		public System.Nullable<long> FK_CategoryId
		{
			get
			{
				return this._FK_CategoryId;
			}
			set
			{
				if ((this._FK_CategoryId != value))
				{
					if (this._tblCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_CategoryIdChanging(value);
					this.SendPropertyChanging();
					this._FK_CategoryId = value;
					this.SendPropertyChanged("FK_CategoryId");
					this.OnFK_CategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_UserId", DbType="BigInt")]
		public System.Nullable<long> FK_UserId
		{
			get
			{
				return this._FK_UserId;
			}
			set
			{
				if ((this._FK_UserId != value))
				{
					if (this._tblLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_UserIdChanging(value);
					this.SendPropertyChanging();
					this._FK_UserId = value;
					this.SendPropertyChanged("FK_UserId");
					this.OnFK_UserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblForumQuestion_tblForumAnswer", Storage="_tblForumAnswers", ThisKey="Id", OtherKey="FK_QuestionId")]
		public EntitySet<tblForumAnswer> tblForumAnswers
		{
			get
			{
				return this._tblForumAnswers;
			}
			set
			{
				this._tblForumAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCategory_tblForumQuestion", Storage="_tblCategory", ThisKey="FK_CategoryId", OtherKey="Id", IsForeignKey=true)]
		public tblCategory tblCategory
		{
			get
			{
				return this._tblCategory.Entity;
			}
			set
			{
				tblCategory previousValue = this._tblCategory.Entity;
				if (((previousValue != value) 
							|| (this._tblCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCategory.Entity = null;
						previousValue.tblForumQuestions.Remove(this);
					}
					this._tblCategory.Entity = value;
					if ((value != null))
					{
						value.tblForumQuestions.Add(this);
						this._FK_CategoryId = value.Id;
					}
					else
					{
						this._FK_CategoryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLogin_tblForumQuestion", Storage="_tblLogin", ThisKey="FK_UserId", OtherKey="Id", IsForeignKey=true)]
		public tblLogin tblLogin
		{
			get
			{
				return this._tblLogin.Entity;
			}
			set
			{
				tblLogin previousValue = this._tblLogin.Entity;
				if (((previousValue != value) 
							|| (this._tblLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblLogin.Entity = null;
						previousValue.tblForumQuestions.Remove(this);
					}
					this._tblLogin.Entity = value;
					if ((value != null))
					{
						value.tblForumQuestions.Add(this);
						this._FK_UserId = value.Id;
					}
					else
					{
						this._FK_UserId = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblForumAnswers(tblForumAnswer entity)
		{
			this.SendPropertyChanging();
			entity.tblForumQuestion = this;
		}
		
		private void detach_tblForumAnswers(tblForumAnswer entity)
		{
			this.SendPropertyChanging();
			entity.tblForumQuestion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblLogin")]
	public partial class tblLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _RollNumber;
		
		private string _Name;
		
		private string _Password;
		
		private string _Class;
		
		private string _Department;
		
		private string _EmailID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
		private System.Nullable<long> _FK_RoleId;
		
		private string _Address;
		
		private System.Nullable<long> _PostalCode;
		
		private EntitySet<tblAssignment> _tblAssignments;
		
		private EntitySet<tblForumAnswer> _tblForumAnswers;
		
		private EntitySet<tblForumQuestion> _tblForumQuestions;
		
		private EntitySet<tblNote> _tblNotes;
		
		private EntitySet<tblResult> _tblResults;
		
		private EntityRef<tblRole> _tblRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRollNumberChanging(string value);
    partial void OnRollNumberChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnEmailIDChanging(string value);
    partial void OnEmailIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnLastLoginChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginChanged();
    partial void OnFK_RoleIdChanging(System.Nullable<long> value);
    partial void OnFK_RoleIdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPostalCodeChanging(System.Nullable<long> value);
    partial void OnPostalCodeChanged();
    #endregion
		
		public tblLogin()
		{
			this._tblAssignments = new EntitySet<tblAssignment>(new Action<tblAssignment>(this.attach_tblAssignments), new Action<tblAssignment>(this.detach_tblAssignments));
			this._tblForumAnswers = new EntitySet<tblForumAnswer>(new Action<tblForumAnswer>(this.attach_tblForumAnswers), new Action<tblForumAnswer>(this.detach_tblForumAnswers));
			this._tblForumQuestions = new EntitySet<tblForumQuestion>(new Action<tblForumQuestion>(this.attach_tblForumQuestions), new Action<tblForumQuestion>(this.detach_tblForumQuestions));
			this._tblNotes = new EntitySet<tblNote>(new Action<tblNote>(this.attach_tblNotes), new Action<tblNote>(this.detach_tblNotes));
			this._tblResults = new EntitySet<tblResult>(new Action<tblResult>(this.attach_tblResults), new Action<tblResult>(this.detach_tblResults));
			this._tblRole = default(EntityRef<tblRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RollNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RollNumber
		{
			get
			{
				return this._RollNumber;
			}
			set
			{
				if ((this._RollNumber != value))
				{
					this.OnRollNumberChanging(value);
					this.SendPropertyChanging();
					this._RollNumber = value;
					this.SendPropertyChanged("RollNumber");
					this.OnRollNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(50)")]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(50)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailID", DbType="NVarChar(50)")]
		public string EmailID
		{
			get
			{
				return this._EmailID;
			}
			set
			{
				if ((this._EmailID != value))
				{
					this.OnEmailIDChanging(value);
					this.SendPropertyChanging();
					this._EmailID = value;
					this.SendPropertyChanged("EmailID");
					this.OnEmailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_RoleId", DbType="BigInt")]
		public System.Nullable<long> FK_RoleId
		{
			get
			{
				return this._FK_RoleId;
			}
			set
			{
				if ((this._FK_RoleId != value))
				{
					if (this._tblRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_RoleIdChanging(value);
					this.SendPropertyChanging();
					this._FK_RoleId = value;
					this.SendPropertyChanged("FK_RoleId");
					this.OnFK_RoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="BigInt")]
		public System.Nullable<long> PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLogin_tblAssignment", Storage="_tblAssignments", ThisKey="Id", OtherKey="FK_StaffId")]
		public EntitySet<tblAssignment> tblAssignments
		{
			get
			{
				return this._tblAssignments;
			}
			set
			{
				this._tblAssignments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLogin_tblForumAnswer", Storage="_tblForumAnswers", ThisKey="Id", OtherKey="FK_UserId")]
		public EntitySet<tblForumAnswer> tblForumAnswers
		{
			get
			{
				return this._tblForumAnswers;
			}
			set
			{
				this._tblForumAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLogin_tblForumQuestion", Storage="_tblForumQuestions", ThisKey="Id", OtherKey="FK_UserId")]
		public EntitySet<tblForumQuestion> tblForumQuestions
		{
			get
			{
				return this._tblForumQuestions;
			}
			set
			{
				this._tblForumQuestions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLogin_tblNote", Storage="_tblNotes", ThisKey="Id", OtherKey="FK_StaffId")]
		public EntitySet<tblNote> tblNotes
		{
			get
			{
				return this._tblNotes;
			}
			set
			{
				this._tblNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLogin_tblResult", Storage="_tblResults", ThisKey="Id", OtherKey="FK_UserId")]
		public EntitySet<tblResult> tblResults
		{
			get
			{
				return this._tblResults;
			}
			set
			{
				this._tblResults.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblRole_tblLogin", Storage="_tblRole", ThisKey="FK_RoleId", OtherKey="Id", IsForeignKey=true)]
		public tblRole tblRole
		{
			get
			{
				return this._tblRole.Entity;
			}
			set
			{
				tblRole previousValue = this._tblRole.Entity;
				if (((previousValue != value) 
							|| (this._tblRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblRole.Entity = null;
						previousValue.tblLogins.Remove(this);
					}
					this._tblRole.Entity = value;
					if ((value != null))
					{
						value.tblLogins.Add(this);
						this._FK_RoleId = value.Id;
					}
					else
					{
						this._FK_RoleId = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblAssignments(tblAssignment entity)
		{
			this.SendPropertyChanging();
			entity.tblLogin = this;
		}
		
		private void detach_tblAssignments(tblAssignment entity)
		{
			this.SendPropertyChanging();
			entity.tblLogin = null;
		}
		
		private void attach_tblForumAnswers(tblForumAnswer entity)
		{
			this.SendPropertyChanging();
			entity.tblLogin = this;
		}
		
		private void detach_tblForumAnswers(tblForumAnswer entity)
		{
			this.SendPropertyChanging();
			entity.tblLogin = null;
		}
		
		private void attach_tblForumQuestions(tblForumQuestion entity)
		{
			this.SendPropertyChanging();
			entity.tblLogin = this;
		}
		
		private void detach_tblForumQuestions(tblForumQuestion entity)
		{
			this.SendPropertyChanging();
			entity.tblLogin = null;
		}
		
		private void attach_tblNotes(tblNote entity)
		{
			this.SendPropertyChanging();
			entity.tblLogin = this;
		}
		
		private void detach_tblNotes(tblNote entity)
		{
			this.SendPropertyChanging();
			entity.tblLogin = null;
		}
		
		private void attach_tblResults(tblResult entity)
		{
			this.SendPropertyChanging();
			entity.tblLogin = this;
		}
		
		private void detach_tblResults(tblResult entity)
		{
			this.SendPropertyChanging();
			entity.tblLogin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblNotes")]
	public partial class tblNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _FK_StaffId;
		
		private System.Nullable<long> _FK_FileId;
		
		private EntityRef<tblFile> _tblFile;
		
		private EntityRef<tblLogin> _tblLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFK_StaffIdChanging(System.Nullable<long> value);
    partial void OnFK_StaffIdChanged();
    partial void OnFK_FileIdChanging(System.Nullable<long> value);
    partial void OnFK_FileIdChanged();
    #endregion
		
		public tblNote()
		{
			this._tblFile = default(EntityRef<tblFile>);
			this._tblLogin = default(EntityRef<tblLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_StaffId", DbType="BigInt")]
		public System.Nullable<long> FK_StaffId
		{
			get
			{
				return this._FK_StaffId;
			}
			set
			{
				if ((this._FK_StaffId != value))
				{
					if (this._tblLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_StaffIdChanging(value);
					this.SendPropertyChanging();
					this._FK_StaffId = value;
					this.SendPropertyChanged("FK_StaffId");
					this.OnFK_StaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_FileId", DbType="BigInt")]
		public System.Nullable<long> FK_FileId
		{
			get
			{
				return this._FK_FileId;
			}
			set
			{
				if ((this._FK_FileId != value))
				{
					if (this._tblFile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_FileIdChanging(value);
					this.SendPropertyChanging();
					this._FK_FileId = value;
					this.SendPropertyChanged("FK_FileId");
					this.OnFK_FileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblFile_tblNote", Storage="_tblFile", ThisKey="FK_FileId", OtherKey="Id", IsForeignKey=true)]
		public tblFile tblFile
		{
			get
			{
				return this._tblFile.Entity;
			}
			set
			{
				tblFile previousValue = this._tblFile.Entity;
				if (((previousValue != value) 
							|| (this._tblFile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblFile.Entity = null;
						previousValue.tblNotes.Remove(this);
					}
					this._tblFile.Entity = value;
					if ((value != null))
					{
						value.tblNotes.Add(this);
						this._FK_FileId = value.Id;
					}
					else
					{
						this._FK_FileId = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblFile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLogin_tblNote", Storage="_tblLogin", ThisKey="FK_StaffId", OtherKey="Id", IsForeignKey=true)]
		public tblLogin tblLogin
		{
			get
			{
				return this._tblLogin.Entity;
			}
			set
			{
				tblLogin previousValue = this._tblLogin.Entity;
				if (((previousValue != value) 
							|| (this._tblLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblLogin.Entity = null;
						previousValue.tblNotes.Remove(this);
					}
					this._tblLogin.Entity = value;
					if ((value != null))
					{
						value.tblNotes.Add(this);
						this._FK_StaffId = value.Id;
					}
					else
					{
						this._FK_StaffId = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblQuestion")]
	public partial class tblQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _QuestionId;
		
		private string _Question;
		
		private System.Nullable<long> _Fk_QuestionTitle;
		
		private System.Nullable<long> _FK_Answer;
		
		private EntitySet<tblAnswer> _tblAnswers;
		
		private EntityRef<tblQuestionTitle> _tblQuestionTitle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIdChanging(long value);
    partial void OnQuestionIdChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnFk_QuestionTitleChanging(System.Nullable<long> value);
    partial void OnFk_QuestionTitleChanged();
    partial void OnFK_AnswerChanging(System.Nullable<long> value);
    partial void OnFK_AnswerChanged();
    #endregion
		
		public tblQuestion()
		{
			this._tblAnswers = new EntitySet<tblAnswer>(new Action<tblAnswer>(this.attach_tblAnswers), new Action<tblAnswer>(this.detach_tblAnswers));
			this._tblQuestionTitle = default(EntityRef<tblQuestionTitle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long QuestionId
		{
			get
			{
				return this._QuestionId;
			}
			set
			{
				if ((this._QuestionId != value))
				{
					this.OnQuestionIdChanging(value);
					this.SendPropertyChanging();
					this._QuestionId = value;
					this.SendPropertyChanged("QuestionId");
					this.OnQuestionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="NVarChar(500)")]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this.OnQuestionChanging(value);
					this.SendPropertyChanging();
					this._Question = value;
					this.SendPropertyChanged("Question");
					this.OnQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fk_QuestionTitle", DbType="BigInt")]
		public System.Nullable<long> Fk_QuestionTitle
		{
			get
			{
				return this._Fk_QuestionTitle;
			}
			set
			{
				if ((this._Fk_QuestionTitle != value))
				{
					if (this._tblQuestionTitle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFk_QuestionTitleChanging(value);
					this.SendPropertyChanging();
					this._Fk_QuestionTitle = value;
					this.SendPropertyChanged("Fk_QuestionTitle");
					this.OnFk_QuestionTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Answer", DbType="BigInt")]
		public System.Nullable<long> FK_Answer
		{
			get
			{
				return this._FK_Answer;
			}
			set
			{
				if ((this._FK_Answer != value))
				{
					this.OnFK_AnswerChanging(value);
					this.SendPropertyChanging();
					this._FK_Answer = value;
					this.SendPropertyChanged("FK_Answer");
					this.OnFK_AnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQuestion_tblAnswer", Storage="_tblAnswers", ThisKey="QuestionId", OtherKey="FK_QuestionId")]
		public EntitySet<tblAnswer> tblAnswers
		{
			get
			{
				return this._tblAnswers;
			}
			set
			{
				this._tblAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQuestionTitle_tblQuestion", Storage="_tblQuestionTitle", ThisKey="Fk_QuestionTitle", OtherKey="QuestionTitleId", IsForeignKey=true)]
		public tblQuestionTitle tblQuestionTitle
		{
			get
			{
				return this._tblQuestionTitle.Entity;
			}
			set
			{
				tblQuestionTitle previousValue = this._tblQuestionTitle.Entity;
				if (((previousValue != value) 
							|| (this._tblQuestionTitle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblQuestionTitle.Entity = null;
						previousValue.tblQuestions.Remove(this);
					}
					this._tblQuestionTitle.Entity = value;
					if ((value != null))
					{
						value.tblQuestions.Add(this);
						this._Fk_QuestionTitle = value.QuestionTitleId;
					}
					else
					{
						this._Fk_QuestionTitle = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblQuestionTitle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblAnswers(tblAnswer entity)
		{
			this.SendPropertyChanging();
			entity.tblQuestion = this;
		}
		
		private void detach_tblAnswers(tblAnswer entity)
		{
			this.SendPropertyChanging();
			entity.tblQuestion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRoles")]
	public partial class tblRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _RoleName;
		
		private EntitySet<tblLogin> _tblLogins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public tblRole()
		{
			this._tblLogins = new EntitySet<tblLogin>(new Action<tblLogin>(this.attach_tblLogins), new Action<tblLogin>(this.detach_tblLogins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblRole_tblLogin", Storage="_tblLogins", ThisKey="Id", OtherKey="FK_RoleId")]
		public EntitySet<tblLogin> tblLogins
		{
			get
			{
				return this._tblLogins;
			}
			set
			{
				this._tblLogins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblLogins(tblLogin entity)
		{
			this.SendPropertyChanging();
			entity.tblRole = this;
		}
		
		private void detach_tblLogins(tblLogin entity)
		{
			this.SendPropertyChanging();
			entity.tblRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSubjects")]
	public partial class tblSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _SubjectName;
		
		private EntitySet<tblTitle> _tblTitles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSubjectNameChanging(string value);
    partial void OnSubjectNameChanged();
    #endregion
		
		public tblSubject()
		{
			this._tblTitles = new EntitySet<tblTitle>(new Action<tblTitle>(this.attach_tblTitles), new Action<tblTitle>(this.detach_tblTitles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="NVarChar(500)")]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this.OnSubjectNameChanging(value);
					this.SendPropertyChanging();
					this._SubjectName = value;
					this.SendPropertyChanged("SubjectName");
					this.OnSubjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSubject_tblTitle", Storage="_tblTitles", ThisKey="Id", OtherKey="FK_SubjectId")]
		public EntitySet<tblTitle> tblTitles
		{
			get
			{
				return this._tblTitles;
			}
			set
			{
				this._tblTitles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblTitles(tblTitle entity)
		{
			this.SendPropertyChanging();
			entity.tblSubject = this;
		}
		
		private void detach_tblTitles(tblTitle entity)
		{
			this.SendPropertyChanging();
			entity.tblSubject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblTitles")]
	public partial class tblTitle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _TitleName;
		
		private System.Nullable<long> _FK_SubjectId;
		
		private EntitySet<tblFile> _tblFiles;
		
		private EntityRef<tblSubject> _tblSubject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTitleNameChanging(string value);
    partial void OnTitleNameChanged();
    partial void OnFK_SubjectIdChanging(System.Nullable<long> value);
    partial void OnFK_SubjectIdChanged();
    #endregion
		
		public tblTitle()
		{
			this._tblFiles = new EntitySet<tblFile>(new Action<tblFile>(this.attach_tblFiles), new Action<tblFile>(this.detach_tblFiles));
			this._tblSubject = default(EntityRef<tblSubject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleName", DbType="NVarChar(500)")]
		public string TitleName
		{
			get
			{
				return this._TitleName;
			}
			set
			{
				if ((this._TitleName != value))
				{
					this.OnTitleNameChanging(value);
					this.SendPropertyChanging();
					this._TitleName = value;
					this.SendPropertyChanged("TitleName");
					this.OnTitleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_SubjectId", DbType="BigInt")]
		public System.Nullable<long> FK_SubjectId
		{
			get
			{
				return this._FK_SubjectId;
			}
			set
			{
				if ((this._FK_SubjectId != value))
				{
					if (this._tblSubject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_SubjectIdChanging(value);
					this.SendPropertyChanging();
					this._FK_SubjectId = value;
					this.SendPropertyChanged("FK_SubjectId");
					this.OnFK_SubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblTitle_tblFile", Storage="_tblFiles", ThisKey="Id", OtherKey="FK_TitleId")]
		public EntitySet<tblFile> tblFiles
		{
			get
			{
				return this._tblFiles;
			}
			set
			{
				this._tblFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSubject_tblTitle", Storage="_tblSubject", ThisKey="FK_SubjectId", OtherKey="Id", IsForeignKey=true)]
		public tblSubject tblSubject
		{
			get
			{
				return this._tblSubject.Entity;
			}
			set
			{
				tblSubject previousValue = this._tblSubject.Entity;
				if (((previousValue != value) 
							|| (this._tblSubject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblSubject.Entity = null;
						previousValue.tblTitles.Remove(this);
					}
					this._tblSubject.Entity = value;
					if ((value != null))
					{
						value.tblTitles.Add(this);
						this._FK_SubjectId = value.Id;
					}
					else
					{
						this._FK_SubjectId = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblSubject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblFiles(tblFile entity)
		{
			this.SendPropertyChanging();
			entity.tblTitle = this;
		}
		
		private void detach_tblFiles(tblFile entity)
		{
			this.SendPropertyChanging();
			entity.tblTitle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblQuestionTitle")]
	public partial class tblQuestionTitle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _QuestionTitleId;
		
		private string _QuestionTitle;
		
		private EntitySet<tblQuestion> _tblQuestions;
		
		private EntitySet<tblTitleCount> _tblTitleCounts;
		
		private EntitySet<tblResultMark> _tblResultMarks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionTitleIdChanging(long value);
    partial void OnQuestionTitleIdChanged();
    partial void OnQuestionTitleChanging(string value);
    partial void OnQuestionTitleChanged();
    #endregion
		
		public tblQuestionTitle()
		{
			this._tblQuestions = new EntitySet<tblQuestion>(new Action<tblQuestion>(this.attach_tblQuestions), new Action<tblQuestion>(this.detach_tblQuestions));
			this._tblTitleCounts = new EntitySet<tblTitleCount>(new Action<tblTitleCount>(this.attach_tblTitleCounts), new Action<tblTitleCount>(this.detach_tblTitleCounts));
			this._tblResultMarks = new EntitySet<tblResultMark>(new Action<tblResultMark>(this.attach_tblResultMarks), new Action<tblResultMark>(this.detach_tblResultMarks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionTitleId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long QuestionTitleId
		{
			get
			{
				return this._QuestionTitleId;
			}
			set
			{
				if ((this._QuestionTitleId != value))
				{
					this.OnQuestionTitleIdChanging(value);
					this.SendPropertyChanging();
					this._QuestionTitleId = value;
					this.SendPropertyChanged("QuestionTitleId");
					this.OnQuestionTitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionTitle", DbType="NVarChar(50)")]
		public string QuestionTitle
		{
			get
			{
				return this._QuestionTitle;
			}
			set
			{
				if ((this._QuestionTitle != value))
				{
					this.OnQuestionTitleChanging(value);
					this.SendPropertyChanging();
					this._QuestionTitle = value;
					this.SendPropertyChanged("QuestionTitle");
					this.OnQuestionTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQuestionTitle_tblQuestion", Storage="_tblQuestions", ThisKey="QuestionTitleId", OtherKey="Fk_QuestionTitle")]
		public EntitySet<tblQuestion> tblQuestions
		{
			get
			{
				return this._tblQuestions;
			}
			set
			{
				this._tblQuestions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQuestionTitle_tblTitleCount", Storage="_tblTitleCounts", ThisKey="QuestionTitleId", OtherKey="Fk_TitleId")]
		public EntitySet<tblTitleCount> tblTitleCounts
		{
			get
			{
				return this._tblTitleCounts;
			}
			set
			{
				this._tblTitleCounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQuestionTitle_tblResultMark", Storage="_tblResultMarks", ThisKey="QuestionTitleId", OtherKey="FK_CateId")]
		public EntitySet<tblResultMark> tblResultMarks
		{
			get
			{
				return this._tblResultMarks;
			}
			set
			{
				this._tblResultMarks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblQuestions(tblQuestion entity)
		{
			this.SendPropertyChanging();
			entity.tblQuestionTitle = this;
		}
		
		private void detach_tblQuestions(tblQuestion entity)
		{
			this.SendPropertyChanging();
			entity.tblQuestionTitle = null;
		}
		
		private void attach_tblTitleCounts(tblTitleCount entity)
		{
			this.SendPropertyChanging();
			entity.tblQuestionTitle = this;
		}
		
		private void detach_tblTitleCounts(tblTitleCount entity)
		{
			this.SendPropertyChanging();
			entity.tblQuestionTitle = null;
		}
		
		private void attach_tblResultMarks(tblResultMark entity)
		{
			this.SendPropertyChanging();
			entity.tblQuestionTitle = this;
		}
		
		private void detach_tblResultMarks(tblResultMark entity)
		{
			this.SendPropertyChanging();
			entity.tblQuestionTitle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAssignDetail")]
	public partial class tblAssignDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<System.DateTime> _TimeDuration;
		
		private System.Nullable<System.DateTime> _TimeLeft;
		
		private EntitySet<tblTitleCount> _tblTitleCounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTimeDurationChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeDurationChanged();
    partial void OnTimeLeftChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeLeftChanged();
    #endregion
		
		public tblAssignDetail()
		{
			this._tblTitleCounts = new EntitySet<tblTitleCount>(new Action<tblTitleCount>(this.attach_tblTitleCounts), new Action<tblTitleCount>(this.detach_tblTitleCounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeDuration", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeDuration
		{
			get
			{
				return this._TimeDuration;
			}
			set
			{
				if ((this._TimeDuration != value))
				{
					this.OnTimeDurationChanging(value);
					this.SendPropertyChanging();
					this._TimeDuration = value;
					this.SendPropertyChanged("TimeDuration");
					this.OnTimeDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeLeft", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeLeft
		{
			get
			{
				return this._TimeLeft;
			}
			set
			{
				if ((this._TimeLeft != value))
				{
					this.OnTimeLeftChanging(value);
					this.SendPropertyChanging();
					this._TimeLeft = value;
					this.SendPropertyChanged("TimeLeft");
					this.OnTimeLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAssignDetail_tblTitleCount", Storage="_tblTitleCounts", ThisKey="Id", OtherKey="Fk_AssignId")]
		public EntitySet<tblTitleCount> tblTitleCounts
		{
			get
			{
				return this._tblTitleCounts;
			}
			set
			{
				this._tblTitleCounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblTitleCounts(tblTitleCount entity)
		{
			this.SendPropertyChanging();
			entity.tblAssignDetail = this;
		}
		
		private void detach_tblTitleCounts(tblTitleCount entity)
		{
			this.SendPropertyChanging();
			entity.tblAssignDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblTitleCount")]
	public partial class tblTitleCount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _Fk_TitleId;
		
		private System.Nullable<int> _count;
		
		private System.Nullable<long> _Fk_AssignId;
		
		private EntityRef<tblAssignDetail> _tblAssignDetail;
		
		private EntityRef<tblQuestionTitle> _tblQuestionTitle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFk_TitleIdChanging(System.Nullable<long> value);
    partial void OnFk_TitleIdChanged();
    partial void OncountChanging(System.Nullable<int> value);
    partial void OncountChanged();
    partial void OnFk_AssignIdChanging(System.Nullable<long> value);
    partial void OnFk_AssignIdChanged();
    #endregion
		
		public tblTitleCount()
		{
			this._tblAssignDetail = default(EntityRef<tblAssignDetail>);
			this._tblQuestionTitle = default(EntityRef<tblQuestionTitle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fk_TitleId", DbType="BigInt")]
		public System.Nullable<long> Fk_TitleId
		{
			get
			{
				return this._Fk_TitleId;
			}
			set
			{
				if ((this._Fk_TitleId != value))
				{
					if (this._tblQuestionTitle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFk_TitleIdChanging(value);
					this.SendPropertyChanging();
					this._Fk_TitleId = value;
					this.SendPropertyChanged("Fk_TitleId");
					this.OnFk_TitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int")]
		public System.Nullable<int> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fk_AssignId", DbType="BigInt")]
		public System.Nullable<long> Fk_AssignId
		{
			get
			{
				return this._Fk_AssignId;
			}
			set
			{
				if ((this._Fk_AssignId != value))
				{
					if (this._tblAssignDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFk_AssignIdChanging(value);
					this.SendPropertyChanging();
					this._Fk_AssignId = value;
					this.SendPropertyChanged("Fk_AssignId");
					this.OnFk_AssignIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAssignDetail_tblTitleCount", Storage="_tblAssignDetail", ThisKey="Fk_AssignId", OtherKey="Id", IsForeignKey=true)]
		public tblAssignDetail tblAssignDetail
		{
			get
			{
				return this._tblAssignDetail.Entity;
			}
			set
			{
				tblAssignDetail previousValue = this._tblAssignDetail.Entity;
				if (((previousValue != value) 
							|| (this._tblAssignDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAssignDetail.Entity = null;
						previousValue.tblTitleCounts.Remove(this);
					}
					this._tblAssignDetail.Entity = value;
					if ((value != null))
					{
						value.tblTitleCounts.Add(this);
						this._Fk_AssignId = value.Id;
					}
					else
					{
						this._Fk_AssignId = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblAssignDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQuestionTitle_tblTitleCount", Storage="_tblQuestionTitle", ThisKey="Fk_TitleId", OtherKey="QuestionTitleId", IsForeignKey=true)]
		public tblQuestionTitle tblQuestionTitle
		{
			get
			{
				return this._tblQuestionTitle.Entity;
			}
			set
			{
				tblQuestionTitle previousValue = this._tblQuestionTitle.Entity;
				if (((previousValue != value) 
							|| (this._tblQuestionTitle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblQuestionTitle.Entity = null;
						previousValue.tblTitleCounts.Remove(this);
					}
					this._tblQuestionTitle.Entity = value;
					if ((value != null))
					{
						value.tblTitleCounts.Add(this);
						this._Fk_TitleId = value.QuestionTitleId;
					}
					else
					{
						this._Fk_TitleId = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblQuestionTitle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblResult")]
	public partial class tblResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ResultId;
		
		private System.Nullable<int> _TotalMark;
		
		private System.Nullable<long> _FK_UserId;
		
		private EntitySet<tblResultMark> _tblResultMarks;
		
		private EntityRef<tblLogin> _tblLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResultIdChanging(long value);
    partial void OnResultIdChanged();
    partial void OnTotalMarkChanging(System.Nullable<int> value);
    partial void OnTotalMarkChanged();
    partial void OnFK_UserIdChanging(System.Nullable<long> value);
    partial void OnFK_UserIdChanged();
    #endregion
		
		public tblResult()
		{
			this._tblResultMarks = new EntitySet<tblResultMark>(new Action<tblResultMark>(this.attach_tblResultMarks), new Action<tblResultMark>(this.detach_tblResultMarks));
			this._tblLogin = default(EntityRef<tblLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ResultId
		{
			get
			{
				return this._ResultId;
			}
			set
			{
				if ((this._ResultId != value))
				{
					this.OnResultIdChanging(value);
					this.SendPropertyChanging();
					this._ResultId = value;
					this.SendPropertyChanged("ResultId");
					this.OnResultIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMark", DbType="Int")]
		public System.Nullable<int> TotalMark
		{
			get
			{
				return this._TotalMark;
			}
			set
			{
				if ((this._TotalMark != value))
				{
					this.OnTotalMarkChanging(value);
					this.SendPropertyChanging();
					this._TotalMark = value;
					this.SendPropertyChanged("TotalMark");
					this.OnTotalMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_UserId", DbType="BigInt")]
		public System.Nullable<long> FK_UserId
		{
			get
			{
				return this._FK_UserId;
			}
			set
			{
				if ((this._FK_UserId != value))
				{
					if (this._tblLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_UserIdChanging(value);
					this.SendPropertyChanging();
					this._FK_UserId = value;
					this.SendPropertyChanged("FK_UserId");
					this.OnFK_UserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblResult_tblResultMark", Storage="_tblResultMarks", ThisKey="ResultId", OtherKey="FK_ResultId")]
		public EntitySet<tblResultMark> tblResultMarks
		{
			get
			{
				return this._tblResultMarks;
			}
			set
			{
				this._tblResultMarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLogin_tblResult", Storage="_tblLogin", ThisKey="FK_UserId", OtherKey="Id", IsForeignKey=true)]
		public tblLogin tblLogin
		{
			get
			{
				return this._tblLogin.Entity;
			}
			set
			{
				tblLogin previousValue = this._tblLogin.Entity;
				if (((previousValue != value) 
							|| (this._tblLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblLogin.Entity = null;
						previousValue.tblResults.Remove(this);
					}
					this._tblLogin.Entity = value;
					if ((value != null))
					{
						value.tblResults.Add(this);
						this._FK_UserId = value.Id;
					}
					else
					{
						this._FK_UserId = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblResultMarks(tblResultMark entity)
		{
			this.SendPropertyChanging();
			entity.tblResult = this;
		}
		
		private void detach_tblResultMarks(tblResultMark entity)
		{
			this.SendPropertyChanging();
			entity.tblResult = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblResultMarks")]
	public partial class tblResultMark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MarkId;
		
		private System.Nullable<int> _Mark;
		
		private System.Nullable<long> _FK_ResultId;
		
		private System.Nullable<long> _FK_CateId;
		
		private EntityRef<tblQuestionTitle> _tblQuestionTitle;
		
		private EntityRef<tblResult> _tblResult;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMarkIdChanging(long value);
    partial void OnMarkIdChanged();
    partial void OnMarkChanging(System.Nullable<int> value);
    partial void OnMarkChanged();
    partial void OnFK_ResultIdChanging(System.Nullable<long> value);
    partial void OnFK_ResultIdChanged();
    partial void OnFK_CateIdChanging(System.Nullable<long> value);
    partial void OnFK_CateIdChanged();
    #endregion
		
		public tblResultMark()
		{
			this._tblQuestionTitle = default(EntityRef<tblQuestionTitle>);
			this._tblResult = default(EntityRef<tblResult>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long MarkId
		{
			get
			{
				return this._MarkId;
			}
			set
			{
				if ((this._MarkId != value))
				{
					this.OnMarkIdChanging(value);
					this.SendPropertyChanging();
					this._MarkId = value;
					this.SendPropertyChanged("MarkId");
					this.OnMarkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int")]
		public System.Nullable<int> Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_ResultId", DbType="BigInt")]
		public System.Nullable<long> FK_ResultId
		{
			get
			{
				return this._FK_ResultId;
			}
			set
			{
				if ((this._FK_ResultId != value))
				{
					if (this._tblResult.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_ResultIdChanging(value);
					this.SendPropertyChanging();
					this._FK_ResultId = value;
					this.SendPropertyChanged("FK_ResultId");
					this.OnFK_ResultIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_CateId", DbType="BigInt")]
		public System.Nullable<long> FK_CateId
		{
			get
			{
				return this._FK_CateId;
			}
			set
			{
				if ((this._FK_CateId != value))
				{
					if (this._tblQuestionTitle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_CateIdChanging(value);
					this.SendPropertyChanging();
					this._FK_CateId = value;
					this.SendPropertyChanged("FK_CateId");
					this.OnFK_CateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQuestionTitle_tblResultMark", Storage="_tblQuestionTitle", ThisKey="FK_CateId", OtherKey="QuestionTitleId", IsForeignKey=true)]
		public tblQuestionTitle tblQuestionTitle
		{
			get
			{
				return this._tblQuestionTitle.Entity;
			}
			set
			{
				tblQuestionTitle previousValue = this._tblQuestionTitle.Entity;
				if (((previousValue != value) 
							|| (this._tblQuestionTitle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblQuestionTitle.Entity = null;
						previousValue.tblResultMarks.Remove(this);
					}
					this._tblQuestionTitle.Entity = value;
					if ((value != null))
					{
						value.tblResultMarks.Add(this);
						this._FK_CateId = value.QuestionTitleId;
					}
					else
					{
						this._FK_CateId = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblQuestionTitle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblResult_tblResultMark", Storage="_tblResult", ThisKey="FK_ResultId", OtherKey="ResultId", IsForeignKey=true, DeleteRule="CASCADE")]
		public tblResult tblResult
		{
			get
			{
				return this._tblResult.Entity;
			}
			set
			{
				tblResult previousValue = this._tblResult.Entity;
				if (((previousValue != value) 
							|| (this._tblResult.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblResult.Entity = null;
						previousValue.tblResultMarks.Remove(this);
					}
					this._tblResult.Entity = value;
					if ((value != null))
					{
						value.tblResultMarks.Add(this);
						this._FK_ResultId = value.ResultId;
					}
					else
					{
						this._FK_ResultId = default(Nullable<long>);
					}
					this.SendPropertyChanged("tblResult");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class sp_tblLoginNewInsertCommandResult
	{
		
		private long _Id;
		
		private string _RollNumber;
		
		private string _Name;
		
		private string _Password;
		
		private string _Class;
		
		private string _Department;
		
		private string _EmailID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
		private System.Nullable<long> _FK_RoleId;
		
		private string _Address;
		
		private System.Nullable<long> _PostalCode;
		
		public sp_tblLoginNewInsertCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RollNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RollNumber
		{
			get
			{
				return this._RollNumber;
			}
			set
			{
				if ((this._RollNumber != value))
				{
					this._RollNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(50)")]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this._Class = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(50)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailID", DbType="NVarChar(50)")]
		public string EmailID
		{
			get
			{
				return this._EmailID;
			}
			set
			{
				if ((this._EmailID != value))
				{
					this._EmailID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this._LastLogin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_RoleId", DbType="BigInt")]
		public System.Nullable<long> FK_RoleId
		{
			get
			{
				return this._FK_RoleId;
			}
			set
			{
				if ((this._FK_RoleId != value))
				{
					this._FK_RoleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="BigInt")]
		public System.Nullable<long> PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
	}
	
	public partial class sp_tblLoginNewSelectCommandResult
	{
		
		private long _Id;
		
		private string _RollNumber;
		
		private string _Name;
		
		private string _Password;
		
		private string _Class;
		
		private string _Department;
		
		private string _EmailID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
		private System.Nullable<long> _FK_RoleId;
		
		private string _Address;
		
		private System.Nullable<long> _PostalCode;
		
		public sp_tblLoginNewSelectCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RollNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RollNumber
		{
			get
			{
				return this._RollNumber;
			}
			set
			{
				if ((this._RollNumber != value))
				{
					this._RollNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(50)")]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this._Class = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(50)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailID", DbType="NVarChar(50)")]
		public string EmailID
		{
			get
			{
				return this._EmailID;
			}
			set
			{
				if ((this._EmailID != value))
				{
					this._EmailID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this._LastLogin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_RoleId", DbType="BigInt")]
		public System.Nullable<long> FK_RoleId
		{
			get
			{
				return this._FK_RoleId;
			}
			set
			{
				if ((this._FK_RoleId != value))
				{
					this._FK_RoleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="BigInt")]
		public System.Nullable<long> PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
	}
	
	public partial class sp_tblLoginNewUpdateCommandResult
	{
		
		private long _Id;
		
		private string _RollNumber;
		
		private string _Name;
		
		private string _Password;
		
		private string _Class;
		
		private string _Department;
		
		private string _EmailID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
		private System.Nullable<long> _FK_RoleId;
		
		private string _Address;
		
		private System.Nullable<long> _PostalCode;
		
		public sp_tblLoginNewUpdateCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RollNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RollNumber
		{
			get
			{
				return this._RollNumber;
			}
			set
			{
				if ((this._RollNumber != value))
				{
					this._RollNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(50)")]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this._Class = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(50)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailID", DbType="NVarChar(50)")]
		public string EmailID
		{
			get
			{
				return this._EmailID;
			}
			set
			{
				if ((this._EmailID != value))
				{
					this._EmailID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this._LastLogin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_RoleId", DbType="BigInt")]
		public System.Nullable<long> FK_RoleId
		{
			get
			{
				return this._FK_RoleId;
			}
			set
			{
				if ((this._FK_RoleId != value))
				{
					this._FK_RoleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="BigInt")]
		public System.Nullable<long> PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this._PostalCode = value;
				}
			}
		}
	}
	
	public partial class sp_tblSubjectsNewInsertCommandResult
	{
		
		private long _Id;
		
		private string _SubjectName;
		
		public sp_tblSubjectsNewInsertCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="NVarChar(500)")]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
	}
	
	public partial class sp_tblSubjectsNewSelectCommandResult
	{
		
		private long _Id;
		
		private string _SubjectName;
		
		public sp_tblSubjectsNewSelectCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="NVarChar(500)")]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
	}
	
	public partial class sp_tblSubjectsNewUpdateCommandResult
	{
		
		private long _Id;
		
		private string _SubjectName;
		
		public sp_tblSubjectsNewUpdateCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="NVarChar(500)")]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
	}
	
	public partial class sp_tblTitlesNewInsertCommandResult
	{
		
		private long _Id;
		
		private string _TitleName;
		
		private System.Nullable<long> _FK_SubjectId;
		
		public sp_tblTitlesNewInsertCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleName", DbType="NVarChar(500)")]
		public string TitleName
		{
			get
			{
				return this._TitleName;
			}
			set
			{
				if ((this._TitleName != value))
				{
					this._TitleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_SubjectId", DbType="BigInt")]
		public System.Nullable<long> FK_SubjectId
		{
			get
			{
				return this._FK_SubjectId;
			}
			set
			{
				if ((this._FK_SubjectId != value))
				{
					this._FK_SubjectId = value;
				}
			}
		}
	}
	
	public partial class sp_tblTitlesNewSelectCommandResult
	{
		
		private long _Id;
		
		private string _TitleName;
		
		private System.Nullable<long> _FK_SubjectId;
		
		public sp_tblTitlesNewSelectCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleName", DbType="NVarChar(500)")]
		public string TitleName
		{
			get
			{
				return this._TitleName;
			}
			set
			{
				if ((this._TitleName != value))
				{
					this._TitleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_SubjectId", DbType="BigInt")]
		public System.Nullable<long> FK_SubjectId
		{
			get
			{
				return this._FK_SubjectId;
			}
			set
			{
				if ((this._FK_SubjectId != value))
				{
					this._FK_SubjectId = value;
				}
			}
		}
	}
	
	public partial class sp_tblTitlesNewUpdateCommandResult
	{
		
		private long _Id;
		
		private string _TitleName;
		
		private System.Nullable<long> _FK_SubjectId;
		
		public sp_tblTitlesNewUpdateCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleName", DbType="NVarChar(500)")]
		public string TitleName
		{
			get
			{
				return this._TitleName;
			}
			set
			{
				if ((this._TitleName != value))
				{
					this._TitleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_SubjectId", DbType="BigInt")]
		public System.Nullable<long> FK_SubjectId
		{
			get
			{
				return this._FK_SubjectId;
			}
			set
			{
				if ((this._FK_SubjectId != value))
				{
					this._FK_SubjectId = value;
				}
			}
		}
	}
	
	public partial class sp_tblAssignmentsNewInsertCommandResult
	{
		
		private long _Id;
		
		private string _FilePath;
		
		private System.Nullable<long> _FK_StaffId;
		
		private string _Topic;
		
		private System.Nullable<int> _AssignNum;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<long> _FK_StudentId;
		
		private System.Nullable<bool> _Status;
		
		public sp_tblAssignmentsNewInsertCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(500)")]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this._FilePath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_StaffId", DbType="BigInt")]
		public System.Nullable<long> FK_StaffId
		{
			get
			{
				return this._FK_StaffId;
			}
			set
			{
				if ((this._FK_StaffId != value))
				{
					this._FK_StaffId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Topic", DbType="NVarChar(500)")]
		public string Topic
		{
			get
			{
				return this._Topic;
			}
			set
			{
				if ((this._Topic != value))
				{
					this._Topic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignNum", DbType="Int")]
		public System.Nullable<int> AssignNum
		{
			get
			{
				return this._AssignNum;
			}
			set
			{
				if ((this._AssignNum != value))
				{
					this._AssignNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_StudentId", DbType="BigInt")]
		public System.Nullable<long> FK_StudentId
		{
			get
			{
				return this._FK_StudentId;
			}
			set
			{
				if ((this._FK_StudentId != value))
				{
					this._FK_StudentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	public partial class sp_tblAssignmentsNewSelectCommandResult
	{
		
		private long _Id;
		
		private string _FilePath;
		
		private System.Nullable<long> _FK_StaffId;
		
		private string _Topic;
		
		private System.Nullable<int> _AssignNum;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<long> _FK_StudentId;
		
		private System.Nullable<bool> _Status;
		
		public sp_tblAssignmentsNewSelectCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(500)")]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this._FilePath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_StaffId", DbType="BigInt")]
		public System.Nullable<long> FK_StaffId
		{
			get
			{
				return this._FK_StaffId;
			}
			set
			{
				if ((this._FK_StaffId != value))
				{
					this._FK_StaffId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Topic", DbType="NVarChar(500)")]
		public string Topic
		{
			get
			{
				return this._Topic;
			}
			set
			{
				if ((this._Topic != value))
				{
					this._Topic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignNum", DbType="Int")]
		public System.Nullable<int> AssignNum
		{
			get
			{
				return this._AssignNum;
			}
			set
			{
				if ((this._AssignNum != value))
				{
					this._AssignNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_StudentId", DbType="BigInt")]
		public System.Nullable<long> FK_StudentId
		{
			get
			{
				return this._FK_StudentId;
			}
			set
			{
				if ((this._FK_StudentId != value))
				{
					this._FK_StudentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	public partial class sp_tblAssignmentsNewUpdateCommandResult
	{
		
		private long _Id;
		
		private string _FilePath;
		
		private System.Nullable<long> _FK_StaffId;
		
		private string _Topic;
		
		private System.Nullable<int> _AssignNum;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<long> _FK_StudentId;
		
		private System.Nullable<bool> _Status;
		
		public sp_tblAssignmentsNewUpdateCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(500)")]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this._FilePath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_StaffId", DbType="BigInt")]
		public System.Nullable<long> FK_StaffId
		{
			get
			{
				return this._FK_StaffId;
			}
			set
			{
				if ((this._FK_StaffId != value))
				{
					this._FK_StaffId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Topic", DbType="NVarChar(500)")]
		public string Topic
		{
			get
			{
				return this._Topic;
			}
			set
			{
				if ((this._Topic != value))
				{
					this._Topic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignNum", DbType="Int")]
		public System.Nullable<int> AssignNum
		{
			get
			{
				return this._AssignNum;
			}
			set
			{
				if ((this._AssignNum != value))
				{
					this._AssignNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_StudentId", DbType="BigInt")]
		public System.Nullable<long> FK_StudentId
		{
			get
			{
				return this._FK_StudentId;
			}
			set
			{
				if ((this._FK_StudentId != value))
				{
					this._FK_StudentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	public partial class sp_selectResult
	{
		
		private string _Name;
		
		private long _Id;
		
		private System.Nullable<long> _FK_StaffId;
		
		private System.Nullable<bool> _Status;
		
		private string _Topic;
		
		private string _FilePath;
		
		private System.Nullable<int> _AssignNum;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<long> _FK_StudentId;
		
		public sp_selectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_StaffId", DbType="BigInt")]
		public System.Nullable<long> FK_StaffId
		{
			get
			{
				return this._FK_StaffId;
			}
			set
			{
				if ((this._FK_StaffId != value))
				{
					this._FK_StaffId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Topic", DbType="NVarChar(500)")]
		public string Topic
		{
			get
			{
				return this._Topic;
			}
			set
			{
				if ((this._Topic != value))
				{
					this._Topic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(500)")]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this._FilePath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignNum", DbType="Int")]
		public System.Nullable<int> AssignNum
		{
			get
			{
				return this._AssignNum;
			}
			set
			{
				if ((this._AssignNum != value))
				{
					this._AssignNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_StudentId", DbType="BigInt")]
		public System.Nullable<long> FK_StudentId
		{
			get
			{
				return this._FK_StudentId;
			}
			set
			{
				if ((this._FK_StudentId != value))
				{
					this._FK_StudentId = value;
				}
			}
		}
	}
	
	public partial class sp_tblNotesNewInsertCommandResult
	{
		
		private long _Id;
		
		private System.Nullable<long> _FK_StaffId;
		
		private System.Nullable<long> _FK_FileId;
		
		public sp_tblNotesNewInsertCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_StaffId", DbType="BigInt")]
		public System.Nullable<long> FK_StaffId
		{
			get
			{
				return this._FK_StaffId;
			}
			set
			{
				if ((this._FK_StaffId != value))
				{
					this._FK_StaffId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_FileId", DbType="BigInt")]
		public System.Nullable<long> FK_FileId
		{
			get
			{
				return this._FK_FileId;
			}
			set
			{
				if ((this._FK_FileId != value))
				{
					this._FK_FileId = value;
				}
			}
		}
	}
	
	public partial class sp_tblNotesNewSelectCommandResult
	{
		
		private long _Id;
		
		private System.Nullable<long> _FK_StaffId;
		
		private System.Nullable<long> _FK_FileId;
		
		public sp_tblNotesNewSelectCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_StaffId", DbType="BigInt")]
		public System.Nullable<long> FK_StaffId
		{
			get
			{
				return this._FK_StaffId;
			}
			set
			{
				if ((this._FK_StaffId != value))
				{
					this._FK_StaffId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_FileId", DbType="BigInt")]
		public System.Nullable<long> FK_FileId
		{
			get
			{
				return this._FK_FileId;
			}
			set
			{
				if ((this._FK_FileId != value))
				{
					this._FK_FileId = value;
				}
			}
		}
	}
	
	public partial class sp_tblNotesNewUpdateCommandResult
	{
		
		private long _Id;
		
		private System.Nullable<long> _FK_StaffId;
		
		private System.Nullable<long> _FK_FileId;
		
		public sp_tblNotesNewUpdateCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_StaffId", DbType="BigInt")]
		public System.Nullable<long> FK_StaffId
		{
			get
			{
				return this._FK_StaffId;
			}
			set
			{
				if ((this._FK_StaffId != value))
				{
					this._FK_StaffId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_FileId", DbType="BigInt")]
		public System.Nullable<long> FK_FileId
		{
			get
			{
				return this._FK_FileId;
			}
			set
			{
				if ((this._FK_FileId != value))
				{
					this._FK_FileId = value;
				}
			}
		}
	}
	
	public partial class sp_tblFilesNewInsertCommandResult
	{
		
		private long _Id;
		
		private System.Nullable<long> _FK_TitleId;
		
		private string _FilePath;
		
		public sp_tblFilesNewInsertCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_TitleId", DbType="BigInt")]
		public System.Nullable<long> FK_TitleId
		{
			get
			{
				return this._FK_TitleId;
			}
			set
			{
				if ((this._FK_TitleId != value))
				{
					this._FK_TitleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(500)")]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this._FilePath = value;
				}
			}
		}
	}
	
	public partial class sp_tblFilesNewSelectCommandResult
	{
		
		private long _Id;
		
		private System.Nullable<long> _FK_TitleId;
		
		private string _FilePath;
		
		public sp_tblFilesNewSelectCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_TitleId", DbType="BigInt")]
		public System.Nullable<long> FK_TitleId
		{
			get
			{
				return this._FK_TitleId;
			}
			set
			{
				if ((this._FK_TitleId != value))
				{
					this._FK_TitleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(500)")]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this._FilePath = value;
				}
			}
		}
	}
	
	public partial class sp_tblFilesNewUpdateCommandResult
	{
		
		private long _Id;
		
		private System.Nullable<long> _FK_TitleId;
		
		private string _FilePath;
		
		public sp_tblFilesNewUpdateCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_TitleId", DbType="BigInt")]
		public System.Nullable<long> FK_TitleId
		{
			get
			{
				return this._FK_TitleId;
			}
			set
			{
				if ((this._FK_TitleId != value))
				{
					this._FK_TitleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(500)")]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this._FilePath = value;
				}
			}
		}
	}
	
	public partial class sp_select_fileResult
	{
		
		private string _TitleName;
		
		private string _SubjectName;
		
		private string _FilePath;
		
		public sp_select_fileResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleName", DbType="NVarChar(500)")]
		public string TitleName
		{
			get
			{
				return this._TitleName;
			}
			set
			{
				if ((this._TitleName != value))
				{
					this._TitleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="NVarChar(500)")]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(500)")]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this._FilePath = value;
				}
			}
		}
	}
	
	public partial class sp_tblAnswersNewInsertCommandResult
	{
		
		private long _Id;
		
		private string _Answer;
		
		private System.Nullable<long> _FK_QuestionId;
		
		private System.Nullable<int> _AnswerType;
		
		public sp_tblAnswersNewInsertCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NVarChar(50)")]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this._Answer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_QuestionId", DbType="BigInt")]
		public System.Nullable<long> FK_QuestionId
		{
			get
			{
				return this._FK_QuestionId;
			}
			set
			{
				if ((this._FK_QuestionId != value))
				{
					this._FK_QuestionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerType", DbType="Int")]
		public System.Nullable<int> AnswerType
		{
			get
			{
				return this._AnswerType;
			}
			set
			{
				if ((this._AnswerType != value))
				{
					this._AnswerType = value;
				}
			}
		}
	}
	
	public partial class sp_tblAnswersNewSelectCommandResult
	{
		
		private long _Id;
		
		private string _Answer;
		
		private System.Nullable<long> _FK_QuestionId;
		
		private System.Nullable<int> _AnswerType;
		
		public sp_tblAnswersNewSelectCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NVarChar(50)")]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this._Answer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_QuestionId", DbType="BigInt")]
		public System.Nullable<long> FK_QuestionId
		{
			get
			{
				return this._FK_QuestionId;
			}
			set
			{
				if ((this._FK_QuestionId != value))
				{
					this._FK_QuestionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerType", DbType="Int")]
		public System.Nullable<int> AnswerType
		{
			get
			{
				return this._AnswerType;
			}
			set
			{
				if ((this._AnswerType != value))
				{
					this._AnswerType = value;
				}
			}
		}
	}
	
	public partial class sp_tblAnswersNewUpdateCommandResult
	{
		
		private long _Id;
		
		private string _Answer;
		
		private System.Nullable<long> _FK_QuestionId;
		
		private System.Nullable<int> _AnswerType;
		
		public sp_tblAnswersNewUpdateCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NVarChar(50)")]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this._Answer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_QuestionId", DbType="BigInt")]
		public System.Nullable<long> FK_QuestionId
		{
			get
			{
				return this._FK_QuestionId;
			}
			set
			{
				if ((this._FK_QuestionId != value))
				{
					this._FK_QuestionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerType", DbType="Int")]
		public System.Nullable<int> AnswerType
		{
			get
			{
				return this._AnswerType;
			}
			set
			{
				if ((this._AnswerType != value))
				{
					this._AnswerType = value;
				}
			}
		}
	}
	
	public partial class sp_tblQuestionNewInsertCommandResult
	{
		
		private long _QuestionId;
		
		private string _Question;
		
		private System.Nullable<long> _Fk_QuestionTitle;
		
		private System.Nullable<long> _FK_Answer;
		
		public sp_tblQuestionNewInsertCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionId", DbType="BigInt NOT NULL")]
		public long QuestionId
		{
			get
			{
				return this._QuestionId;
			}
			set
			{
				if ((this._QuestionId != value))
				{
					this._QuestionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="NVarChar(500)")]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this._Question = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fk_QuestionTitle", DbType="BigInt")]
		public System.Nullable<long> Fk_QuestionTitle
		{
			get
			{
				return this._Fk_QuestionTitle;
			}
			set
			{
				if ((this._Fk_QuestionTitle != value))
				{
					this._Fk_QuestionTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Answer", DbType="BigInt")]
		public System.Nullable<long> FK_Answer
		{
			get
			{
				return this._FK_Answer;
			}
			set
			{
				if ((this._FK_Answer != value))
				{
					this._FK_Answer = value;
				}
			}
		}
	}
	
	public partial class sp_tblQuestionNewSelectCommandResult
	{
		
		private long _QuestionId;
		
		private string _Question;
		
		private System.Nullable<long> _Fk_QuestionTitle;
		
		private System.Nullable<long> _FK_Answer;
		
		public sp_tblQuestionNewSelectCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionId", DbType="BigInt NOT NULL")]
		public long QuestionId
		{
			get
			{
				return this._QuestionId;
			}
			set
			{
				if ((this._QuestionId != value))
				{
					this._QuestionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="NVarChar(500)")]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this._Question = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fk_QuestionTitle", DbType="BigInt")]
		public System.Nullable<long> Fk_QuestionTitle
		{
			get
			{
				return this._Fk_QuestionTitle;
			}
			set
			{
				if ((this._Fk_QuestionTitle != value))
				{
					this._Fk_QuestionTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Answer", DbType="BigInt")]
		public System.Nullable<long> FK_Answer
		{
			get
			{
				return this._FK_Answer;
			}
			set
			{
				if ((this._FK_Answer != value))
				{
					this._FK_Answer = value;
				}
			}
		}
	}
	
	public partial class sp_tblQuestionNewUpdateCommandResult
	{
		
		private long _QuestionId;
		
		private string _Question;
		
		private System.Nullable<long> _Fk_QuestionTitle;
		
		private System.Nullable<long> _FK_Answer;
		
		public sp_tblQuestionNewUpdateCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionId", DbType="BigInt NOT NULL")]
		public long QuestionId
		{
			get
			{
				return this._QuestionId;
			}
			set
			{
				if ((this._QuestionId != value))
				{
					this._QuestionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="NVarChar(500)")]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this._Question = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fk_QuestionTitle", DbType="BigInt")]
		public System.Nullable<long> Fk_QuestionTitle
		{
			get
			{
				return this._Fk_QuestionTitle;
			}
			set
			{
				if ((this._Fk_QuestionTitle != value))
				{
					this._Fk_QuestionTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Answer", DbType="BigInt")]
		public System.Nullable<long> FK_Answer
		{
			get
			{
				return this._FK_Answer;
			}
			set
			{
				if ((this._FK_Answer != value))
				{
					this._FK_Answer = value;
				}
			}
		}
	}
	
	public partial class sp_tblQuestionTitleNewInsertCommandResult
	{
		
		private long _QuestionTitleId;
		
		private string _QuestionTitle;
		
		public sp_tblQuestionTitleNewInsertCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionTitleId", DbType="BigInt NOT NULL")]
		public long QuestionTitleId
		{
			get
			{
				return this._QuestionTitleId;
			}
			set
			{
				if ((this._QuestionTitleId != value))
				{
					this._QuestionTitleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionTitle", DbType="NVarChar(50)")]
		public string QuestionTitle
		{
			get
			{
				return this._QuestionTitle;
			}
			set
			{
				if ((this._QuestionTitle != value))
				{
					this._QuestionTitle = value;
				}
			}
		}
	}
	
	public partial class sp_tblQuestionTitleNewSelectCommandResult
	{
		
		private long _QuestionTitleId;
		
		private string _QuestionTitle;
		
		public sp_tblQuestionTitleNewSelectCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionTitleId", DbType="BigInt NOT NULL")]
		public long QuestionTitleId
		{
			get
			{
				return this._QuestionTitleId;
			}
			set
			{
				if ((this._QuestionTitleId != value))
				{
					this._QuestionTitleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionTitle", DbType="NVarChar(50)")]
		public string QuestionTitle
		{
			get
			{
				return this._QuestionTitle;
			}
			set
			{
				if ((this._QuestionTitle != value))
				{
					this._QuestionTitle = value;
				}
			}
		}
	}
	
	public partial class sp_tblQuestionTitleNewUpdateCommandResult
	{
		
		private long _QuestionTitleId;
		
		private string _QuestionTitle;
		
		public sp_tblQuestionTitleNewUpdateCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionTitleId", DbType="BigInt NOT NULL")]
		public long QuestionTitleId
		{
			get
			{
				return this._QuestionTitleId;
			}
			set
			{
				if ((this._QuestionTitleId != value))
				{
					this._QuestionTitleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionTitle", DbType="NVarChar(50)")]
		public string QuestionTitle
		{
			get
			{
				return this._QuestionTitle;
			}
			set
			{
				if ((this._QuestionTitle != value))
				{
					this._QuestionTitle = value;
				}
			}
		}
	}
	
	public partial class sp_tblAssignDetailNewInsertCommandResult
	{
		
		private long _Id;
		
		private System.Nullable<System.DateTime> _TimeDuration;
		
		private System.Nullable<System.DateTime> _TimeLeft;
		
		public sp_tblAssignDetailNewInsertCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeDuration", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeDuration
		{
			get
			{
				return this._TimeDuration;
			}
			set
			{
				if ((this._TimeDuration != value))
				{
					this._TimeDuration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeLeft", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeLeft
		{
			get
			{
				return this._TimeLeft;
			}
			set
			{
				if ((this._TimeLeft != value))
				{
					this._TimeLeft = value;
				}
			}
		}
	}
	
	public partial class sp_tblAssignDetailNewSelectCommandResult
	{
		
		private long _Id;
		
		private System.Nullable<System.DateTime> _TimeDuration;
		
		private System.Nullable<System.DateTime> _TimeLeft;
		
		public sp_tblAssignDetailNewSelectCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeDuration", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeDuration
		{
			get
			{
				return this._TimeDuration;
			}
			set
			{
				if ((this._TimeDuration != value))
				{
					this._TimeDuration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeLeft", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeLeft
		{
			get
			{
				return this._TimeLeft;
			}
			set
			{
				if ((this._TimeLeft != value))
				{
					this._TimeLeft = value;
				}
			}
		}
	}
	
	public partial class sp_tblAssignDetailNewUpdateCommandResult
	{
		
		private long _Id;
		
		private System.Nullable<System.DateTime> _TimeDuration;
		
		private System.Nullable<System.DateTime> _TimeLeft;
		
		public sp_tblAssignDetailNewUpdateCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeDuration", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeDuration
		{
			get
			{
				return this._TimeDuration;
			}
			set
			{
				if ((this._TimeDuration != value))
				{
					this._TimeDuration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeLeft", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeLeft
		{
			get
			{
				return this._TimeLeft;
			}
			set
			{
				if ((this._TimeLeft != value))
				{
					this._TimeLeft = value;
				}
			}
		}
	}
	
	public partial class sp_tblTitleCountNewUpdateCommandResult
	{
		
		private long _Id;
		
		private System.Nullable<long> _Fk_TitleId;
		
		private System.Nullable<int> _count;
		
		private System.Nullable<long> _Fk_AssignId;
		
		public sp_tblTitleCountNewUpdateCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fk_TitleId", DbType="BigInt")]
		public System.Nullable<long> Fk_TitleId
		{
			get
			{
				return this._Fk_TitleId;
			}
			set
			{
				if ((this._Fk_TitleId != value))
				{
					this._Fk_TitleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int")]
		public System.Nullable<int> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fk_AssignId", DbType="BigInt")]
		public System.Nullable<long> Fk_AssignId
		{
			get
			{
				return this._Fk_AssignId;
			}
			set
			{
				if ((this._Fk_AssignId != value))
				{
					this._Fk_AssignId = value;
				}
			}
		}
	}
	
	public partial class sp_tblTitleCountNewSelectCommandResult
	{
		
		private long _Id;
		
		private System.Nullable<long> _Fk_TitleId;
		
		private System.Nullable<int> _count;
		
		private System.Nullable<long> _Fk_AssignId;
		
		public sp_tblTitleCountNewSelectCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fk_TitleId", DbType="BigInt")]
		public System.Nullable<long> Fk_TitleId
		{
			get
			{
				return this._Fk_TitleId;
			}
			set
			{
				if ((this._Fk_TitleId != value))
				{
					this._Fk_TitleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int")]
		public System.Nullable<int> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fk_AssignId", DbType="BigInt")]
		public System.Nullable<long> Fk_AssignId
		{
			get
			{
				return this._Fk_AssignId;
			}
			set
			{
				if ((this._Fk_AssignId != value))
				{
					this._Fk_AssignId = value;
				}
			}
		}
	}
	
	public partial class sp_tblTitleCountNewInsertCommandResult
	{
		
		private long _Id;
		
		private System.Nullable<long> _Fk_TitleId;
		
		private System.Nullable<int> _count;
		
		private System.Nullable<long> _Fk_AssignId;
		
		public sp_tblTitleCountNewInsertCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fk_TitleId", DbType="BigInt")]
		public System.Nullable<long> Fk_TitleId
		{
			get
			{
				return this._Fk_TitleId;
			}
			set
			{
				if ((this._Fk_TitleId != value))
				{
					this._Fk_TitleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int")]
		public System.Nullable<int> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fk_AssignId", DbType="BigInt")]
		public System.Nullable<long> Fk_AssignId
		{
			get
			{
				return this._Fk_AssignId;
			}
			set
			{
				if ((this._Fk_AssignId != value))
				{
					this._Fk_AssignId = value;
				}
			}
		}
	}
	
	public partial class sp_tblResultMarksNewInsertCommandResult
	{
		
		private long _MarkId;
		
		private System.Nullable<int> _Mark;
		
		private System.Nullable<long> _FK_ResultId;
		
		private System.Nullable<long> _FK_CateId;
		
		public sp_tblResultMarksNewInsertCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkId", DbType="BigInt NOT NULL")]
		public long MarkId
		{
			get
			{
				return this._MarkId;
			}
			set
			{
				if ((this._MarkId != value))
				{
					this._MarkId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int")]
		public System.Nullable<int> Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this._Mark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_ResultId", DbType="BigInt")]
		public System.Nullable<long> FK_ResultId
		{
			get
			{
				return this._FK_ResultId;
			}
			set
			{
				if ((this._FK_ResultId != value))
				{
					this._FK_ResultId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_CateId", DbType="BigInt")]
		public System.Nullable<long> FK_CateId
		{
			get
			{
				return this._FK_CateId;
			}
			set
			{
				if ((this._FK_CateId != value))
				{
					this._FK_CateId = value;
				}
			}
		}
	}
	
	public partial class sp_tblResultMarksNewSelectCommandResult
	{
		
		private long _MarkId;
		
		private System.Nullable<int> _Mark;
		
		private System.Nullable<long> _FK_ResultId;
		
		private System.Nullable<long> _FK_CateId;
		
		public sp_tblResultMarksNewSelectCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkId", DbType="BigInt NOT NULL")]
		public long MarkId
		{
			get
			{
				return this._MarkId;
			}
			set
			{
				if ((this._MarkId != value))
				{
					this._MarkId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int")]
		public System.Nullable<int> Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this._Mark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_ResultId", DbType="BigInt")]
		public System.Nullable<long> FK_ResultId
		{
			get
			{
				return this._FK_ResultId;
			}
			set
			{
				if ((this._FK_ResultId != value))
				{
					this._FK_ResultId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_CateId", DbType="BigInt")]
		public System.Nullable<long> FK_CateId
		{
			get
			{
				return this._FK_CateId;
			}
			set
			{
				if ((this._FK_CateId != value))
				{
					this._FK_CateId = value;
				}
			}
		}
	}
	
	public partial class sp_tblResultMarksNewUpdateCommandResult
	{
		
		private long _MarkId;
		
		private System.Nullable<int> _Mark;
		
		private System.Nullable<long> _FK_ResultId;
		
		private System.Nullable<long> _FK_CateId;
		
		public sp_tblResultMarksNewUpdateCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkId", DbType="BigInt NOT NULL")]
		public long MarkId
		{
			get
			{
				return this._MarkId;
			}
			set
			{
				if ((this._MarkId != value))
				{
					this._MarkId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int")]
		public System.Nullable<int> Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this._Mark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_ResultId", DbType="BigInt")]
		public System.Nullable<long> FK_ResultId
		{
			get
			{
				return this._FK_ResultId;
			}
			set
			{
				if ((this._FK_ResultId != value))
				{
					this._FK_ResultId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_CateId", DbType="BigInt")]
		public System.Nullable<long> FK_CateId
		{
			get
			{
				return this._FK_CateId;
			}
			set
			{
				if ((this._FK_CateId != value))
				{
					this._FK_CateId = value;
				}
			}
		}
	}
	
	public partial class sp_tblResultNewInsertCommandResult
	{
		
		private long _ResultId;
		
		private System.Nullable<int> _TotalMark;
		
		private System.Nullable<long> _FK_UserId;
		
		public sp_tblResultNewInsertCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultId", DbType="BigInt NOT NULL")]
		public long ResultId
		{
			get
			{
				return this._ResultId;
			}
			set
			{
				if ((this._ResultId != value))
				{
					this._ResultId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMark", DbType="Int")]
		public System.Nullable<int> TotalMark
		{
			get
			{
				return this._TotalMark;
			}
			set
			{
				if ((this._TotalMark != value))
				{
					this._TotalMark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_UserId", DbType="BigInt")]
		public System.Nullable<long> FK_UserId
		{
			get
			{
				return this._FK_UserId;
			}
			set
			{
				if ((this._FK_UserId != value))
				{
					this._FK_UserId = value;
				}
			}
		}
	}
	
	public partial class sp_tblResultNewSelectCommandResult
	{
		
		private long _ResultId;
		
		private System.Nullable<int> _TotalMark;
		
		private System.Nullable<long> _FK_UserId;
		
		public sp_tblResultNewSelectCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultId", DbType="BigInt NOT NULL")]
		public long ResultId
		{
			get
			{
				return this._ResultId;
			}
			set
			{
				if ((this._ResultId != value))
				{
					this._ResultId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMark", DbType="Int")]
		public System.Nullable<int> TotalMark
		{
			get
			{
				return this._TotalMark;
			}
			set
			{
				if ((this._TotalMark != value))
				{
					this._TotalMark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_UserId", DbType="BigInt")]
		public System.Nullable<long> FK_UserId
		{
			get
			{
				return this._FK_UserId;
			}
			set
			{
				if ((this._FK_UserId != value))
				{
					this._FK_UserId = value;
				}
			}
		}
	}
	
	public partial class sp_tblResultNewUpdateCommandResult
	{
		
		private long _ResultId;
		
		private System.Nullable<int> _TotalMark;
		
		private System.Nullable<long> _FK_UserId;
		
		public sp_tblResultNewUpdateCommandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultId", DbType="BigInt NOT NULL")]
		public long ResultId
		{
			get
			{
				return this._ResultId;
			}
			set
			{
				if ((this._ResultId != value))
				{
					this._ResultId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMark", DbType="Int")]
		public System.Nullable<int> TotalMark
		{
			get
			{
				return this._TotalMark;
			}
			set
			{
				if ((this._TotalMark != value))
				{
					this._TotalMark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_UserId", DbType="BigInt")]
		public System.Nullable<long> FK_UserId
		{
			get
			{
				return this._FK_UserId;
			}
			set
			{
				if ((this._FK_UserId != value))
				{
					this._FK_UserId = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
